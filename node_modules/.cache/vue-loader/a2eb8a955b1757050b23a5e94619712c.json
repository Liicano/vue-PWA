{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Pages/Login.vue?vue&type=style&index=0&id=45d74331&scoped=true&lang=css&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Pages/Login.vue","mtime":1551300281304},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.google {\n  display: block;\n  text-align: center;\n  margin: auto;\n}\n.title {\n  color: black;\n}\n.row {\n  margin: auto;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/pages/Dashboard/Pages","sourcesContent":["<template>\n  <div class=\"md-layout text-center\">\n    <div class=\"md-layout-item md-size-33 md-medium-size-50 md-small-size-70 md-xsmall-size-100\">\n      <login-card header-color=\"green\">\n        <md-field class=\"md-form-group mdl-typography--text-center\" slot=\"title\">\n          <div class=\"row\">\n            <img src=\"../../../assets/img/logo_transparente.png\" alt>\n          </div>\n        </md-field>\n\n        <p slot=\"description\" class=\"description\">Ingresa con google</p>\n\n        <md-button slot=\"inputs\" class=\"md-simple google\" style=\"margin-top: -7%;\">\n          <Gauth class from=\"login\"></Gauth>\n        </md-button>\n\n        <p slot=\"inputs\" class=\"description\">{{lg.base.or}}</p>\n\n        <md-button\n          slot=\"inputs\"\n          v-if=\"!local\"\n          class=\"md-simple md-info\"\n          md-alignment=\"space-between\"\n          @click=\"toggleLocal\"\n        >{{ lg.user.loginEmail }}</md-button>\n        <div slot=\"inputs\" v-if=\"local\">\n          <md-field class=\"md-form-group\" slot=\"inputs\">\n            <md-icon>email</md-icon>\n            <label>{{ lg.user.email }} / {{ lg.user.username }}</label>\n            <md-input v-validate=\"'required'\" v-model=\"email\" type=\"email\" name=\"email\"></md-input>\n          </md-field>\n          <span class=\"text-danger\">{{ errors.first('email') }}</span>\n          <md-icon v-if=\"errors.first('email')\" class=\"left text-danger\">warning</md-icon>\n          <md-field class=\"md-form-group\" slot=\"inputs\">\n            <md-icon>lock_outline</md-icon>\n            <label>{{ lg.user.password }}</label>\n            <md-input v-validate=\"'required|min:8'\" type=\"password\" name=\"pass\" v-model=\"password\"></md-input>\n          </md-field>\n          <span class=\"text-danger\">{{ errors.first('pass') }}</span>\n          <md-icon v-if=\"errors.first('pass')\" class=\"left text-danger\">warning</md-icon>\n          <center>\n            <md-button\n              slot=\"footer\"\n              class=\"md-simple md-success md-lg\"\n              @click=\"login\"\n            >{{ lg.user.loginGo }}</md-button>\n            <md-button\n              slot=\"footer\"\n              class=\"md-simple md-success md-lg\"\n              @click=\"restart\"\n            >{{ lg.user.restartPassword }}</md-button>\n          </center>\n        </div>\n\n        <center slot=\"inputs\">\n          <md-button\n            class=\"md-simple md-info md-sm\"\n            md-alignment=\"space-between\"\n            to=\"/register\"\n          >{{ lg.user.noAccount }}</md-button>\n        </center>\n      </login-card>\n    </div>\n  </div>\n</template>\n<script>\nimport { LoginCard } from '@/components';\nimport { mapGetters, mapActions } from 'vuex';\nimport Vue from 'vue';\nimport spinner from '../Components/spinner';\n// import Notifications from '../../../components/NotificationPlugin';\nimport api from '../../../lib/api';\nimport Gauth from '../../../components/Gauth';\n\nimport bool from 'normalize-bool';\nimport lang from '../../../languages';\n// Vue.use(Notifications);\n// import axios from 'axios'\nexport default {\n  components: {\n    LoginCard,\n    Gauth,\n    spinner\n  },\n  data() {\n    return {\n      user: null,\n      firstname: null,\n      email: null,\n      password: null,\n      loading: false,\n      url: {\n        google: api + '/auth/login'\n      },\n      local: false\n    };\n  },\n  computed: {\n    ...mapGetters([\n      // eslint-disable-next-line\n      'getUrls'\n    ])\n  },\n  methods: {\n    login() {\n      if (this.email != null && this.password != null) {\n        if (this.errors.items.length > 0) {\n          this.$toasted.show('Uno o mas campos erroneos!', { type: 'danger' });\n        } else {\n          console.log('LOGEANDO...');\n          this.$store\n            .dispatch('users/login', {\n              username: this.email,\n              password: this.password\n            })\n            // eslint-disable-next-line\n            .then(res => {\n              console.log('LOGEADO...');\n\n              this.$router.push('/');\n            })\n            .catch(err => {\n              //err.status  & err.statusText\n              let type = new Map();\n              type.set(403, 'warning');\n              type.set(404, 'danger');\n              type.set(401, 'warning');\n              console.log('err');\n              console.log(err);\n              this.$toasted.show(err.data.err, { type: type.get(err.status) });\n              this.$toasted.show(err.statusText, {\n                type: type.get(err.status)\n              });\n            });\n        }\n      } else {\n        this.$toasted.show('Uno o mas campos vacios!', { type: 'danger' });\n      }\n    },\n\n    restart() {\n      if (this.email !== null && this.email !== '') {\n        this.restartPassword(this.email)\n          .then(res => {\n            this.$toasted.show(lang.user.restartPasswordSuccess);\n          })\n          .catch(err => {\n            this.$toasted.show(lang.user.restartPasswordFail, {\n              type: 'danger'\n            });\n          });\n      } else {\n        this.$toasted.show(lang.user.restartNoEmail, { type: 'info' });\n      }\n    },\n    ...mapActions({\n      verify: 'users/verify',\n      restartPassword: 'users/restart'\n    }),\n    toggleLocal() {\n      this.local = !this.local;\n    }\n  },\n  mounted() {\n    let router = this.$router;\n    if (bool(this.$route.query.verifyAccount)) {\n      this.verify({\n        hash: this.$route.query.hash,\n        id: this.$route.query.id\n      })\n        .then(res => {\n          this.$toasted.show(res.message);\n\n          router.push('/');\n        })\n        .catch(err => {\n          this.$toasted.show(err.message, { type: 'danger' });\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.google {\n  display: block;\n  text-align: center;\n  margin: auto;\n}\n.title {\n  color: black;\n}\n.row {\n  margin: auto;\n}\n</style>"]}]}