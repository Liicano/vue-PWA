{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Components/money.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Components/money.vue","mtime":1548428942926},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport { Money } from 'v-money';\n\nexport default {\n  components: { Money },\n  props: {\n    number: 0,\n    field: ''\n  },\n  data() {\n    return {\n      price: 0,\n      isSale: null,\n      money: {\n        decimal: ',',\n        thousands: '.',\n        prefix: '$ ',\n        suffix: ' CLP',\n        precision: 0,\n        masked: true\n      }\n    };\n  },\n  mounted() {\n    this.price = this.number;\n  },\n\n  methods: {\n    trasnform(n) {\n      let res = n.match(/\\d/g).join('');\n      let number = parseInt(res);\n\n      return number;\n    },\n    update(event) {\n      let res = {\n        name: event.name,\n        value: this.trasnform(event.value)\n      };\n\n      this.$emit('updateFunc', res);\n    }\n  }\n};\n",{"version":3,"sources":["money.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"money.vue","sourceRoot":"src/pages/Dashboard/Components","sourcesContent":["<template>\n  <div>\n    <money v-model=\"price\" :name=\"field\" v-bind=\"money\" @input.native=\"update($event.target)\"></money>\n  </div>\n</template>\n\n<script>\nimport { Money } from 'v-money';\n\nexport default {\n  components: { Money },\n  props: {\n    number: 0,\n    field: ''\n  },\n  data() {\n    return {\n      price: 0,\n      isSale: null,\n      money: {\n        decimal: ',',\n        thousands: '.',\n        prefix: '$ ',\n        suffix: ' CLP',\n        precision: 0,\n        masked: true\n      }\n    };\n  },\n  mounted() {\n    this.price = this.number;\n  },\n\n  methods: {\n    trasnform(n) {\n      let res = n.match(/\\d/g).join('');\n      let number = parseInt(res);\n\n      return number;\n    },\n    update(event) {\n      let res = {\n        name: event.name,\n        value: this.trasnform(event.value)\n      };\n\n      this.$emit('updateFunc', res);\n    }\n  }\n};\n</script>"]}]}