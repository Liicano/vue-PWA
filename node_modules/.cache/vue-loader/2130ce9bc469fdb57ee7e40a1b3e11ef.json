{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/components/Gauth.vue?vue&type=style&index=0&id=28a541e2&scoped=true&lang=css&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/components/Gauth.vue","mtime":1551299368532},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  /* display: inline-block; */\n  /* padding: 4px 8px; */\n  /* border-radius: 10px; */\n  /* background-color: #3c82f7; */\n  color: #3c82f7;\n  /* box-shadow: 0 3px 0 #0f69ff; */\n  /* margin: auto; */\n  cursor: pointer;\n}\n/* .google { */\n/* border: 1px solid lightblue;\n  border-radius: 5px; */\n/* } */\n.google img {\n  width: 5rem;\n  height: 5rem;\n}\n",{"version":3,"sources":["Gauth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gauth.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- <center> -->\n  <g-signin-button :params=\"googleSignInParams\" @success=\"onSignInSuccess\" @error=\"onSignInError\">\n    <!-- <i class=\"fab fa-google-plus-g\">Login </i> -->\n    <!-- <div class=\"google\"> -->\n    <img src=\"../assets/img/google/btn_google_light_normal_ios.svg\" alt width=\"32px\" height=\"32px\">\n    <!-- <span>{{lg.user.signin +' ' + lg.user.googleLogin}}</span> -->\n    <!-- </div> -->\n    <!-- <strong> {{ from }} {{ lg.user.googleLogin }}</strong> -->\n  </g-signin-button>\n  <!-- </center> -->\n</template>\n \n<script>\nimport locale from '../languages';\nimport spinner from '../../src/pages/Dashboard/Components/spinner';\nexport default {\n  name: 'Gauth',\n  props: {\n    from: ''\n  },\n  data() {\n    return {\n      /**\n       * The Auth2 parameters, as seen on\n       * https://developers.google.com/identity/sign-in/web/reference#gapiauth2initparams.\n       * As the very least, a valid client_id must present.\n       * @type {Object}\n       */\n      googleSignInParams: {\n        client_id:\n          '911992056725-uno0u77p6vc770gnv30jmr9t7bl6hhk8.apps.googleusercontent.com',\n        scope: 'profile email https://www.googleapis.com/auth/calendar openid'\n      },\n      loading: false\n    };\n  },\n\n  components: {\n    spinner\n  },\n  methods: {\n    onSignInSuccess(googleUser) {\n      // `googleUser` is the GoogleUser object that represents the just-signed-in user.\n      // See https://developers.google.com/identity/sign-in/web/reference#users\n      //eslint-disable-next-line\n      const profile = googleUser.getBasicProfile(); // etc etc\n      const token = googleUser.getAuthResponse().id_token;\n      const access_token = googleUser.getAuthResponse().access_token;\n      // eslint-disable-next-line\n      // console.log(id_token);\n      // console.log(profile);\n      // console.log(profile.getFamilyName());\n      // console.log(profile.getGivenName());\n\n      // console.log(profile.getId());\n      // console.log(profile.getImageUrl());\n      // console.log(profile.getName());\n\n      // console.log(profile.getEmail());\n      // console.log(googleUser.getAuthResponse().access_token);\n\n      const google = {\n        id: profile.getId(),\n        name: profile.getName(),\n        email: profile.getEmail(),\n        accessToken: access_token,\n        imgUrl: profile.getImageUrl()\n      };\n      let router = this.$router;\n      if (this.from === 'login') {\n        this.loading = true;\n\n        this.$store\n          .dispatch('users/google', { token, access_token, google })\n          // eslint-disable-next-line\n          .then(data => {\n            this.loading = false;\n\n            router.push('/');\n          })\n          .catch((err, response) => {\n            if (response.status === 404) {\n              this.$router.push('/register');\n            }\n          });\n      } else if (this.from === 'register') {\n        this.$store\n          .dispatch('users/googleNew', { token, googleUser })\n          // eslint-disable-next-line\n          .then(data => {\n            router.push('/');\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n    },\n    onSignInError(error) {\n      // `error` contains any error occurred.\n      // eslint-disable-next-line\n      console.log(error);\n      this.$toasted.show(' ' + error.error + ' ', { type: 'danger' });\n    }\n  }\n};\n</script> \n \n<style scoped>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  /* display: inline-block; */\n  /* padding: 4px 8px; */\n  /* border-radius: 10px; */\n  /* background-color: #3c82f7; */\n  color: #3c82f7;\n  /* box-shadow: 0 3px 0 #0f69ff; */\n  /* margin: auto; */\n  cursor: pointer;\n}\n/* .google { */\n/* border: 1px solid lightblue;\n  border-radius: 5px; */\n/* } */\n.google img {\n  width: 5rem;\n  height: 5rem;\n}\n</style> "]}]}