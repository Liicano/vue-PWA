{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/components/Wizard/WizardTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/components/Wizard/WizardTab.vue","mtime":1547153505005},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'wizard-tab',\n  props: {\n    label: String,\n    id: String,\n    beforeChange: Function\n  },\n  inject: ['addTab', 'removeTab'],\n  data(){\n    return {\n      active: false,\n      checked: false,\n      hasError: false,\n      tabId: ''\n    }\n  },\n  mounted() {\n    this.addTab(this)\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el)\n    }\n    this.removeTab(this)\n  }\n}\n",{"version":3,"sources":["WizardTab.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WizardTab.vue","sourceRoot":"src/components/Wizard","sourcesContent":["<template>\n  <div class=\"tab-pane fade\"\n       role=\"tabpanel\"\n       :id=\"tabId\"\n       :aria-hidden=\"!active\"\n       :aria-labelledby=\"`step-${tabId}`\"\n       :class=\"{'active show': active}\" v-show=\"active\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'wizard-tab',\n    props: {\n      label: String,\n      id: String,\n      beforeChange: Function\n    },\n    inject: ['addTab', 'removeTab'],\n    data(){\n      return {\n        active: false,\n        checked: false,\n        hasError: false,\n        tabId: ''\n      }\n    },\n    mounted() {\n      this.addTab(this)\n    },\n    destroyed() {\n      if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el)\n      }\n      this.removeTab(this)\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}