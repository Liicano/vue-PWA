{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Pages/Register.vue?vue&type=template&id=27802466&scoped=true&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Pages/Register.vue","mtime":1551299314768},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"md-layout\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"md-layout-item\" },\n      [\n        _c(\"signup-card\", [\n          _c(\n            \"h2\",\n            {\n              staticClass: \"title text-center\",\n              attrs: { slot: \"title\" },\n              slot: \"title\"\n            },\n            [_vm._v(\"Register\")]\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"md-layout-item md-size-50 md-medium-size-50 md-small-size-100 ml-auto\",\n              attrs: { slot: \"content-left\" },\n              slot: \"content-left\"\n            },\n            _vm._l(_vm.contentLeft, function(item) {\n              return _c(\n                \"div\",\n                { key: item.title, staticClass: \"info info-horizontal\" },\n                [\n                  _c(\n                    \"div\",\n                    { class: \"icon \" + item.colorIcon },\n                    [_c(\"md-icon\", [_vm._v(_vm._s(item.icon))])],\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"description\" }, [\n                    _c(\"h4\", { staticClass: \"info-title\" }, [\n                      _vm._v(_vm._s(item.title))\n                    ]),\n                    _c(\"p\", { staticClass: \"description\" }, [\n                      _vm._v(_vm._s(item.description))\n                    ])\n                  ])\n                ]\n              )\n            }),\n            0\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"md-layout-item md-size-50 md-medium-size-50 md-small-size-100 mr-auto\",\n              attrs: { slot: \"content-right\" },\n              slot: \"content-right\"\n            },\n            [\n              _c(\n                \"md-field\",\n                { staticClass: \"md-form-group\" },\n                [\n                  _c(\"md-icon\", [_vm._v(\"person\")]),\n                  _c(\"md-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"alpha|required\",\n                        expression: \"'alpha|required'\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      placeholder: _vm.lg.user.name,\n                      name: \"name\"\n                    },\n                    model: {\n                      value: _vm.name,\n                      callback: function($$v) {\n                        _vm.name = $$v\n                      },\n                      expression: \"name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"text-danger\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"name\")))\n              ]),\n              _vm.errors.first(\"name\")\n                ? _c(\"md-icon\", { staticClass: \"left text-danger\" }, [\n                    _vm._v(\"warning\")\n                  ])\n                : _vm._e(),\n              _c(\n                \"md-field\",\n                { staticClass: \"md-form-group\" },\n                [\n                  _c(\"md-icon\", [_vm._v(\"email\")]),\n                  _c(\"md-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"email|required\",\n                        expression: \"'email|required'\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"email\",\n                      type: \"email\",\n                      placeholder: _vm.lg.user.email\n                    },\n                    model: {\n                      value: _vm.email,\n                      callback: function($$v) {\n                        _vm.email = $$v\n                      },\n                      expression: \"email\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"text-danger\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"email\")))\n              ]),\n              _vm.errors.first(\"email\")\n                ? _c(\"md-icon\", { staticClass: \"left text-danger\" }, [\n                    _vm._v(\"warning\")\n                  ])\n                : _vm._e(),\n              _c(\n                \"md-checkbox\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.terms = !_vm.terms\n                    }\n                  },\n                  model: {\n                    value: _vm.terms,\n                    callback: function($$v) {\n                      _vm.terms = $$v\n                    },\n                    expression: \"terms\"\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n          \" + _vm._s(_vm.lg.base.term1) + \"\\n          \"\n                  ),\n                  _c(\"a\", { attrs: { to: \"/terms\" } }, [\n                    _vm._v(_vm._s(_vm.lg.base.term2))\n                  ]),\n                  _vm._v(\".\\n        \")\n                ]\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"button-container\" },\n                [\n                  _c(\n                    \"md-button\",\n                    {\n                      staticClass: \"md-success md-round mt-4\",\n                      attrs: { slot: \"footer\", href: \"\" },\n                      on: { click: _vm.register },\n                      slot: \"footer\"\n                    },\n                    [_vm._v(_vm._s(_vm.lg.user.register))]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"button-container\" },\n                [\n                  _c(\n                    \"md-button\",\n                    {\n                      staticClass: \"md-success md-round mt-4\",\n                      attrs: { slot: \"footer\", href: \"\", to: \"/login\" },\n                      slot: \"footer\"\n                    },\n                    [_vm._v(_vm._s(_vm.lg.user.haveAccount))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}