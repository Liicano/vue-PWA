{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Layout/TopNavbar.vue?vue&type=style&index=0&id=6d300610&lang=scss&scoped=true&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/Dashboard/Layout/TopNavbar.vue","mtime":1552331554849},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#mobile_navbar {\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 9%;\n  background: rgb(231, 231, 231);\n}\n#desktop_navbar {\n  display: none;\n}\n@media (min-width: 992px) {\n  .avatarMobile {\n    display: none;\n  }\n  .smallScreen-button {\n    display: none;\n  }\n}\n\n.md-menu,\n.toggle {\n  margin: 0px;\n}\n\n#profile_img {\n  width: 4%;\n  float: left;\n  margin-right: -50%;\n}\n\ntextarea:focus {\n  border-bottom: none !important;\n  box-shadow: none !important;\n}\n.topNavbar {\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n}\n\n.navbarImg {\n  max-width: 36px;\n  max-height: 36px;\n  border-radius: 50px;\n}\nul {\n  min-width: 90% !important;\n}\n\n.avatarNavbar {\n  margin-left: -15px;\n  position: relative;\n  display: inline-block;\n  border: 1px solid #01c73e;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 39px;\n  height: 39px;\n}\n.avatarContainer {\n  margin-left: 10px;\n  margin-top: 0px;\n}\n\n.avatarNavbar img {\n  width: 50px;\n  height: 50px;\n  transform: scale(-1, 1);\n}\n.md-big-hide {\n  display: none;\n}\n@media (max-width: 618px) {\n  .md-big-hide {\n    display: block;\n  }\n}\n\n.demo-badge {\n  > div {\n    margin-bottom: 16px;\n  }\n}\n\n.main-toolbar {\n  position: fixed;\n  z-index: 10;\n  left: 0;\n  right: 0;\n}\n",{"version":3,"sources":["TopNavbar.vue"],"names":[],"mappingsrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"TopNavbar.vue","sourceRoot":"src/pages/Dashboard/Layout","sourcesContent":["<template>\n  <div>\n    <div class=\"main-toolbar\">\n      <md-toolbar\n        id=\"toolbar\"\n        v-if=\"!this.$route.meta.hideNavbar\"\n        class=\"md-success md-dense flex: 1\"\n        :class=\"{'md-toolbar-absolute md-fixed-top': $route.meta.navbarAbsolute}\"\n        style=\"background-color: #01C73E !important; width: 100%\"\n      >\n        <div class=\"md-toolbar-row\">\n          <div class=\"md-toolbar-section-start md-small\">\n            <md-button\n              class=\"md-just-icon md-round md-simple md-white\"\n              style=\"margin-left: -20%\"\n              @click=\"$router.go(-1); handleBottomNav(true)\"\n            >\n              <md-icon>arrow_back</md-icon>\n            </md-button>\n\n            <router-link :to=\"{path:'/user/profile'}\" tag=\"a\" class=\"brand-logo\" v-if=\"isMobile\">\n              <offline @detected-condition=\"handleConnectivityChange\">\n                <div slot=\"online\">\n                  <div v-if=\"!getBusinessScope._id\">\n                    <md-avatar v-if=\"user.imgUrl\" class=\"avatarMobile\">\n                      <img :src=\"user.imgUrl\" alt=\"Avatar\">\n                    </md-avatar>\n\n                    <md-avatar v-else class=\"avatarMobile\">\n                      <img src=\"../../../assets/img/profile.png\" alt=\"Avatar\">\n                    </md-avatar>\n                  </div>\n\n                  <div v-else>\n                    <div class=\"avatarContainer\">\n                      <span class=\"avatarNavbar demo-badge\" v-if=\"user.imgUrl\">\n                        <md-avatar>\n                          <img :src=\"user.imgUrl\">\n                        </md-avatar>\n                      </span>\n                      <span class=\"avatarNavbar\">\n                        <md-avatar\n                          class=\"md-avatar-icon md-sucess\"\n                        >{{getBusinessScope.name.charAt(0)}}</md-avatar>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div slot=\"offline\">\n                  <div v-if=\"!getBusinessScope._id\">\n                    <md-badge\n                      class=\"md-square avatarMobile\"\n                      md-position=\"bottom\"\n                      md-content=\"OFF\"\n                      v-if=\"user.imgUrl\"\n                    >\n                      <md-avatar>\n                        <img :src=\"user.imgUrl\" alt=\"Avatar\">\n                      </md-avatar>\n                    </md-badge>\n                    <md-badge\n                      v-else\n                      class=\"md-primary md-square\"\n                      md-position=\"bottom\"\n                      md-content=\"OFF\"\n                    >\n                      <md-avatar class=\"avatarMobile\">\n                        <img src=\"../../../assets/img/profile.png\" alt=\"Avatar\">\n                      </md-avatar>\n                    </md-badge>\n                  </div>\n\n                  <div v-else>\n                    <div class=\"avatarContainer\">\n                      <span class=\"avatarNavbar demo-badge\" v-if=\"user.imgUrl\">\n                        <md-badge\n                          class=\"md-primary md-square\"\n                          md-position=\"bottom\"\n                          md-content=\"OFF\"\n                        >\n                          <md-avatar>\n                            <img :src=\"user.imgUrl\">\n                          </md-avatar>\n                        </md-badge>\n                      </span>\n                      <span class=\"avatarNavbar\">\n                        <md-avatar\n                          class=\"md-avatar-icon md-sucess\"\n                        >{{getBusinessScope.name.charAt(0)}}</md-avatar>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </offline>\n            </router-link>\n          </div>\n\n          <md-dialog :md-active.sync=\"searchPanel\">\n            <md-dialog-title>\n              <small class=\"left\">Busqueda de movimiento</small>\n              \n              <span class=\"right\" @click=\"searchBlock\">\n                <md-icon>close</md-icon>\n              </span>\n            </md-dialog-title>\n            <div class=\"md-layout\">\n              <div class=\"md-layout-item md-size-45 md-small-size-100\" style=\"padding: 0\">\n                <general-search\n                  style=\"width: 100%;padding: 0 5px;\"\n                  @clickOnItem=\"goToMovement\"\n                  @clickOnCreate=\"createMovement\"\n                  :initialValue=\"''\"\n                  :itemType=\"'movements'\"\n                  :principalAtribute=\"'name'\"\n                  :secondaryAtribute=\"'state'\"\n                  :optionalMultipleAtribute=\"''\"\n                  :placeholder_value=\"'Movimientos'\"\n                  :secondaryQuery=\"{name:'isActive', value:true}\"\n                ></general-search>\n              </div>\n            </div>\n          </md-dialog>\n\n          <modal v-if=\"confirmModal\">\n            <template slot=\"body\">\n              <center>\n                <p style=\"color:black;\">¿Deseas eliminar este movimiento?</p>\n              </center>\n            </template>\n\n            <template slot=\"footer\">\n              <md-button class=\"md-simple md-danger\" @click=\"deleteIncome(false)\">NO</md-button>\n              <md-button class=\"md-success md-simple\" @click=\"deleteIncome(true)\">SI</md-button>\n            </template>\n          </modal>\n\n          <div class=\"md-toolbar-section-end\">\n            <!-- ===================================\nOPCIONES DEL NAVBAR\n            ===================================-->\n            <div v-if=\"navOptions\">\n              <span v-for=\"nav in navOptions\" :key=\"nav._id\">\n                <router-link :to=\"{path: nav.isLink.route}\" v-if=\"nav.isLink\">\n                  <md-button class=\"md-just-icon md-round md-simple md-white\">\n                    <md-icon>{{nav.icon}}</md-icon>\n                  </md-button>\n                </router-link>\n\n                <span v-else>\n                  <md-button\n                    :class=\"{'md-just-icon md-round md-simple md-white': true}\"\n                    @click=\"call(nav.function)\"\n                  >\n                    <md-icon :class=\"{'md-big-hide': !nav.desktop}\">{{nav.icon}}</md-icon>\n                  </md-button>\n                </span>\n              </span>\n            </div>\n            <!-- ===================================\nOPCIONES DEL NAVBAR\n            ===================================-->\n            <!-- ===================================\nLISTA DE EMPRESAS NAVBAR\n            ===================================-->\n            <div v-if=\"isMobile && $route.path == '/user/profile'\">\n              <div class=\"md-layout\" v-if=\"getBusiness.docs.length > 0\">\n                <div\n                  class=\"md-layout-item md-size-50\"\n                  v-for=\"company in getBusiness.docs.slice(0, 2)\"\n                  :key=\"company._id\"\n                >\n                  <span v-if=\"($route.path == '/user/profile')\" @click=\"setBusiness(company)\">\n                    <md-avatar class=\"md-avatar-icon md-sucess\">{{company.name.charAt(0)}}</md-avatar>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <!-- ===================================\n// LISTA DE EMPRESAS NAVBAR\n            ===================================-->\n          </div>\n        </div>\n        <div class=\"md-toolbar-row\" v-if=\"moreOptions\">\n          <div>\n            <br>\n\n            <div class=\"md-layout\">\n              <div class=\"md-layout-item md-size-33\" v-for=\"opt in navSubOptions\" :key=\"opt._id\">\n                <center>\n                  <md-button\n                    class=\"md-just-icon md-round md-simple md-mini md-dense md-white\"\n                    @click=\"call(opt.function, opt.params[0]); moreOptions = !moreOptions\"\n                  >\n                    <md-icon>{{opt.icon}}</md-icon>\n                  </md-button>\n                  <br>\n                  <small>{{opt.name}}</small>\n                </center>\n              </div>\n            </div>\n          </div>\n        </div>\n      </md-toolbar>\n      <bottomModal\n        :config=\"bottomSheet_config\"\n        @option_0=\"sendEmail\"\n        @option_1=\"shareInc\"\n        @option_2=\"showInvoice\"\n      ></bottomModal>\n      <!-- SE DEBEN DECLARAR FUNCIONES CON NUMERO DE ACUERDO \n    A LA CANTIDAD DE OPCIONES QUE LLEVA EL BOTTOMSHEET, ES DECIR. \n    SI TIENE SOLO DOS OPCIONES, SE DEBE DECLARAR OPTION_0 Y OPTION_1 \n    CON SUS RESPECTIVAS FUNCIONES \n    ==============================\n    DE IGUAL MANERA EL OBJETO PARAMS DENTRO DE LA CONFIGURACION DEL BOTTOM_SHEET CONTIENE LOS PARAMETROS QUE SE DEBAN INGRESAR EN ESA FUNCION A EJECUTAR\n    (CABE DESTACAR QUE TODO VA EN ORDEN DEL INDEX, ASI QUE SE DEBE MANTENER EL ORDEN.)\n      -->\n    </div>\n    <br>\n    <br>\n    <br>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions, mapState, mapMutations } from 'vuex';\nimport swal from 'sweetalert2';\nimport isMobile from '../../../assets/js/isMobile.js';\nimport { Modal } from '@/components';\nimport autocomplete from '../Components/autocomplete/autocomplete';\nimport generalSearch from '../Components/generalSearch/generalSearch';\nimport dialogButton from '../../Dashboard/Components/dialogButton';\nimport bottomModal from '../Components/bottom_modal';\nimport Push from 'push.js';\nimport offline from 'v-offline';\n\nexport default {\n  data() {\n    return {\n      selectedMovement: [],\n      navOptions: [],\n      navSubOptions: [],\n      moreOptions: false,\n      searchPanel: false,\n      loading: false,\n      loadingInvoice: false,\n      confirmModal: false,\n      shareSheet: false,\n      getBusinessAll: null,\n      isMobile: null,\n      isOnline: true,\n\n      bottomSheet_config: {\n        options: [\n          { img: 'email.png', title: 'Correo electronico', params: {} },\n          { img: 'others.png', title: 'Otros', params: {} },\n          { img: 'dowmload.png', title: 'descargar', params: {} }\n        ],\n        title: ''\n      }\n    };\n  },\n\n  components: {\n    swal,\n    autocomplete,\n    dialogButton,\n    generalSearch,\n    Modal,\n    bottomModal,\n    offline\n  },\n  methods: {\n    call(funct, params) {\n      this[funct](params);\n    },\n    handleConnectivityChange(online) {\n      this.isOnline = online;\n      if (online == true) {\n        Push.create('Bienvenido de vuelta!', {\n          body: 'Tu actividad se esta sincronizando en segundo plano!',\n          icon: '../../../../public/favicon.png',\n          timeout: 99999,\n          onClick: function() {\n            window.focus();\n            this.close();\n          }\n        });\n      } else {\n        Push.create('Estas offline!', {\n          body:\n            'Estas en modo offline, tu actividad sera sincronizada al estar de nuevo online.',\n          icon: '../../../../public/favicon.png',\n          timeout: 99999,\n          onClick: function() {\n            window.focus();\n            this.close();\n          }\n        });\n      }\n    },\n\n    shareInc() {\n      if (navigator.share) {\n        let typeMovement =\n          this.getIncome.responsable.data._id == this.getUser._id\n            ? 'outcome'\n            : 'income';\n\n        navigator\n          .share({\n            title: 'Unabase',\n            text:\n              ('' + this.getIncome.responsable.type\n                ? this.getIncome.responsable.data.name\n                : this.getIncome.responsable.name) +\n              ', te envio una cotización!',\n            url: `https://app.unabase.com/movement/` + this.getIncome._id\n          })\n          .then(() => {\n            this.handleBottomModal(false);\n            this.$toasted.show('Documento compartido con exito!');\n          })\n          .catch(error => {\n            this.$toasted.show('Error al compartir documento!', {\n              type: 'danger'\n            });\n          });\n      }\n    },\n    shareBottom() {\n      if (this.getBottomModalState == true) {\n        this.handleBottomModal(false);\n      } else {\n        this.handleBottomModal(true);\n      }\n    },\n\n    validateEmail(email) {\n      var re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    },\n\n    sendEmail() {\n      if (this.getIncome.lines.length > 0) {\n        if (!this.getIncome._id) {\n          this.$toasted.show('Debe guardar el movimiento!', { type: 'info' });\n        } else {\n          this.loading = true;\n          if (\n            (this.getIncome.type == null ||\n              this.getIncome.client.type == undefined) &&\n            !this.getIncome.client.type\n          ) {\n            this.handleOptionalEmail(true);\n          } else {\n            if (this.loading) {\n              this.$toasted.show('Enviando...', { type: 'info' });\n            }\n            this.$store\n              .dispatch('incomes/shareIncome', this.getIncome)\n              .then(res => {\n                this.loading = false;\n                this.$toasted.show('Enviado con exito!');\n              });\n            this.handleBottomModal(false);\n          }\n        }\n      } else {\n        this.$toasted.show('Venta sin productos!', { type: 'danger' });\n        this.handleBottomModal(false);\n      }\n    },\n\n    // shareInvoice() {\n    //   if (this.getIncome.lines.length > 0) {\n    //     this.loading = true;\n\n    //     swal({\n    //       title: '',\n    //       text: 'Elige uno de los metodos para enviar tu cotización',\n    //       type: 'success',\n    //       showCancelButton: true,\n    //       confirmButtonText: 'Email',\n    //       cancelButtonText: 'Otros',\n    //       confirmButtonClass: 'md-button md-success',\n    //       cancelButtonClass: 'md-button md-info',\n    //       buttonsStyling: false\n    //     }).then(result => {\n    //       if (result.value) {\n\n    //       } else if (result.dismiss === swal.DismissReason.cancel) {\n    //         this.shareInc();\n    //       }\n    //     });\n    //   } else {\n    //     this.$notify({\n    //       message: 'Datos incompletos',\n    //       icon: 'add_alert',\n    //       horizontalAlign: 'center',\n    //       verticalAlign: 'top',\n    //       type: 'warning'\n    //     });\n    //   }\n    // },\n    showMore() {\n      this.moreOptions = !this.moreOptions;\n    },\n    deleteIncome(answer) {\n      if (answer) {\n        this.$store\n          .dispatch('incomes/anulateIncome', this.getIncome)\n          .then(res => {\n            if (res == true) {\n              this.$toasted.show('Documento eliminado!');\n              this.$router.push('/incomes');\n            }\n          });\n      }\n      this.confirmModal = !this.confirmModal;\n    },\n    goToMovement(item) {\n      this.searchBlock();\n      this.$router.push('/income/' + item._id);\n    },\n    createMovement(item) {\n      this.searchBlock();\n      this.$router.push('/income');\n    },\n\n    toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    minimizeSidebar() {\n      if (this.$sidebar) {\n        this.$sidebar.toggleMinimize();\n      }\n    },\n    ...mapActions({\n      getAllIncomes: 'incomes/getAllIncomes',\n      postIncome: 'incomes/postIncome',\n      putIncome: 'incomes/putIncome',\n      createInvoice: 'incomes/createInvoice',\n      postCompany: 'business/postCompany',\n      putUser: 'users/putUser',\n      putCompany: 'business/putCompany',\n      postItem: 'items/postItem',\n      putItem: 'items/putItem'\n    }),\n    ...mapMutations({\n      handleBottomNav: 'HIDE_SHOW_BOTTOM',\n      handleBottomTotals: 'HIDE_SHOW_TOTALS',\n      setIncomeParams: 'SET_INCOMES_PARAMS',\n      changeDialogMessage: 'HANDLE_MSG_DIALOG',\n      hideShowBottom: 'HIDE_SHOW_BOTTOM',\n      handleOptionalEmail: 'HANDLE_OPTIONAL_EMAIL',\n      handleBottomModal: 'HANDLE_BOTTOM_MODAL',\n      showDetails: 'HANDLE_DETAILS',\n      changeBusiness: 'CHANGE_BUSINESS',\n      handleItemDialog: 'HANDLE_ITEM_DIALOG'\n    }),\n\n    showTotalBar() {\n      this.handleBottomTotals(true);\n      this.handleBottomNav(false);\n      this.$router.push('/income');\n    },\n    displayDialogMsg(\n      dialog = true,\n      bottomBar = false,\n      inputs = true,\n      clean = false\n    ) {\n      console.log('entroo');\n      // if (this.inMobile) {\n      this.changeDialogMessage(dialog);\n      this.hideShowBottom(bottomBar);\n      this.showDetails(inputs);\n      // }\n    },\n    showInvoice() {\n      alert('Servicio en construccion');\n    },\n\n    // GUARDAR INCOME\n    // saveIncome() {\n    //   if (this.getIncome.name != '' && this.getIncome.client != '') {\n    //     if (this.$route.path == '/income') {\n    //       this.postIncome(this.INCOME).then(res => {\n    //         this.$notify({\n    //           message: 'Venta almacenada',\n    //           icon: 'add_alert',\n    //           horizontalAlign: 'center',\n    //           verticalAlign: 'top',\n    //           type: 'success'\n    //         });\n    //         this.$router.push('/incomes');\n    //       });\n    //     } else {\n    //       this.putIncome(this.INCOME).then(res => {\n    //         // this.$notify({\n    //         //   message: '¡Venta actualizada con exito!',\n    //         //   icon: 'add_alert',\n    //         //   horizontalAlign: 'center',\n    //         //   verticalAlign: 'top',\n    //         //   type: 'success'\n    //         // });\n    //       });\n    //     }\n    //   } else {\n    //     this.$notify({\n    //       message: 'Error, Uno o mas campos vacios.',\n    //       icon: 'add_alert',\n    //       horizontalAlign: 'center',\n    //       verticalAlign: 'top',\n    //       type: 'danger'\n    //     });\n    //   }\n    // },\n    filterIncomes(filter) {\n      switch (filter) {\n        case 'pendings':\n          this.setIncomeParams('isActive=true&state=draft');\n          break;\n\n        case 'solds':\n          this.setIncomeParams('isActive=true&state=sold');\n          break;\n\n        case 'anulated':\n          this.setIncomeParams('isActive=false');\n          break;\n\n        default:\n          break;\n      }\n    },\n    searchBlock() {\n      this.searchPanel = !this.searchPanel;\n      this.handleBottomNav(!this.searchPanel);\n    },\n    handleMessages() {\n      this.changeDialogMessage(true);\n    },\n    setBusiness(company) {\n      console.log(company);\n      this.changeBusiness(company);\n      this.$toasted.show('<b> ' + this.getBusinessScope.name + '</b> !');\n    },\n\n    saveCompany() {\n      if (this.getOneCompany._id) {\n        this.putCompany(this.getOneCompany).then(res => {\n          this.$router.push({ path: '/user/business' });\n        });\n      } else {\n        this.postCompany(this.getOneCompany).then(res => {\n          this.$router.push({ path: '/user/business' });\n        });\n      }\n    },\n    deleteCompany() {\n      let obj = {\n        _id: this.getOneCompany._id,\n        isActive: false\n      };\n      this.putCompany(obj).then(res => {\n        this.$router.push({ path: '/user/business' });\n      });\n    },\n    createItem() {\n      if (this.$route.params.id) {\n        this.putItem(this.getItem).then(res => {\n          this.$router.push('/items');\n          this.$toasted.show('Actualizado con exito!');\n        });\n      } else {\n        this.postItem(this.getItem).then(res => {\n          this.$router.push('/items');\n          this.$toasted.show('Creado con exito!');\n        });\n      }\n    },\n    deleteItem() {\n      let obj = { _id: this.getItem._id, isActive: false };\n      this.putItem(obj).then(res => {\n        this.$router.push('/items');\n        this.$toasted.show('Eliminado con exito!');\n      });\n    }\n  },\n  computed: {\n    ...mapGetters({\n      user: 'users/user',\n      getIncomes: 'incomes/getIncomes',\n      getIncome: 'incomes/getIncome',\n      getUser: 'users/user',\n      getContact: 'contacts/getContact',\n      getBusiness: 'business/getBusiness',\n      getOneCompany: 'business/getOneCompany',\n      getBottomModalState: 'getBottomModalState',\n      getBusinessScope: 'getBusinessScope',\n      getShowDialogIncome: 'getShowDialogIncome',\n      getItem: 'items/getItem'\n    }),\n    ...mapState({\n      showBottom: 'showBottom',\n      incomeState: 'incomes/income',\n      showNavbar: 'showNavbar',\n      showDialogMessage: state => state.showDialogMessage\n    }),\n\n    TOTAL() {\n      let total = _.sumBy(this.getIncome.lines, function(line) {\n        return line.price * line.quantity;\n      });\n\n      return {\n        net: total,\n        tax: total * 0.19,\n        total: total * 0.19 + total\n      };\n    },\n\n    INCOMES_SIZE() {\n      return this.getIncomes.docs.length;\n    },\n    INCOME() {\n      return {\n        _id: this.getIncome._id,\n        name: this.getIncome.name,\n        description: this.getIncome.description,\n        dates: {\n          expiration: null\n        },\n        contact: this.getContact != null ? this.getContact._id : null,\n        client:\n          this.getIncome.client != null\n            ? this.getIncome.client.user\n              ? this.getIncome.client.user._id\n              : this.getIncome.client\n            : null,\n\n        creator: this.getIncome.creator,\n        responsable: this.getIncome.responsable,\n\n        lines: [],\n        total: {\n          net: 0,\n          tax: 0\n        },\n        state: 'draft',\n        isActive: true,\n        currency: null\n      };\n    }\n  },\n  created() {},\n  mounted() {\n    // HANDLE NAVBAR OPTIONS\n    this.navOptions = this.$route.meta.navOptions;\n    this.navSubOptions = this.$route.meta.navSubOptions;\n    if (!this.$route.meta.navSubOptions) this.moreOptions = false;\n\n    this.getBusinessAll = this.getBusiness;\n    this.isMobile = isMobile;\n  },\n  watch: {\n    $route: function(to, from, next) {\n      console.log(this.$route.meta);\n      // HANDLE ROUTE NAVBAR OPTIONS\n      this.navOptions = this.$route.meta.navOptions;\n      this.navSubOptions = this.$route.meta.navSubOptions;\n      if (!this.$route.meta.navSubOptions) this.moreOptions = false;\n\n      // HIDE GENERAL SEARCH IF ROUTES CHANGE\n      if (this.searchPanel) {\n        this.searchPanel = false;\n        this.handleBottomNav(true);\n      }\n      // HIDE BOTTOMNAV ON ROUTE CHANGE\n      this.handleBottomModal(false);\n\n      // HANDLE ITEM DIALOG ON ROUTE CHANGE\n      if (this.isMobile) {\n        if (this.getShowDialogIncome) {\n          //  this.$router.push(from.path);\n          //  this.handleItemDialog(false);\n        }\n      }\n    }\n  }\n};\n</script>\n\n\n<style lang=\"scss\" scoped>\n#mobile_navbar {\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 9%;\n  background: rgb(231, 231, 231);\n}\n#desktop_navbar {\n  display: none;\n}\n@media (min-width: 992px) {\n  .avatarMobile {\n    display: none;\n  }\n  .smallScreen-button {\n    display: none;\n  }\n}\n\n.md-menu,\n.toggle {\n  margin: 0px;\n}\n\n#profile_img {\n  width: 4%;\n  float: left;\n  margin-right: -50%;\n}\n\ntextarea:focus {\n  border-bottom: none !important;\n  box-shadow: none !important;\n}\n.topNavbar {\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n}\n\n.navbarImg {\n  max-width: 36px;\n  max-height: 36px;\n  border-radius: 50px;\n}\nul {\n  min-width: 90% !important;\n}\n\n.avatarNavbar {\n  margin-left: -15px;\n  position: relative;\n  display: inline-block;\n  border: 1px solid #01c73e;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 39px;\n  height: 39px;\n}\n.avatarContainer {\n  margin-left: 10px;\n  margin-top: 0px;\n}\n\n.avatarNavbar img {\n  width: 50px;\n  height: 50px;\n  transform: scale(-1, 1);\n}\n.md-big-hide {\n  display: none;\n}\n@media (max-width: 618px) {\n  .md-big-hide {\n    display: block;\n  }\n}\n\n.demo-badge {\n  > div {\n    margin-bottom: 16px;\n  }\n}\n\n.main-toolbar {\n  position: fixed;\n  z-index: 10;\n  left: 0;\n  right: 0;\n}\n</style>\n"]}]}