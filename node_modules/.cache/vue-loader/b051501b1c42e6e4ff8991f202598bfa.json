{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/user/configuration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/user/configuration.vue","mtime":1552572630774},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport store from '../../store/store.js';\nimport { mapGetters, mapMutations, mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      select: {}\n    };\n  },\n\n  created() {\n    this.getAllCurrencies();\n  },\n  mounted() {\n    this.select = this.getUser.currency ? this.getUser.currency : {};\n  },\n  methods: {\n    ...mapMutations({\n      setCurrency: 'currency/SET_CURRENCY',\n      setUser: 'users/setUser'\n    }),\n    ...mapActions({\n      getAllCurrencies: 'currency/getAllCurrencies'\n    }),\n    changeCurrency(event) {\n      let name = 'currency';\n      let obj = {\n        isObject: true,\n        attr: name,\n        value: event\n      };\n      this.setUser(obj);\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getCurrencies: 'currency/getCurrencies',\n      getUser: 'users/user'\n    })\n  },\n\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: (to, from, next) => {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    next();\n  }\n};\n",{"version":3,"sources":["configuration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"configuration.vue","sourceRoot":"src/pages/user","sourcesContent":["<template>\n  <div id=\"textField\">\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-size-100\">\n        <v-list three-line subheader>\n          <v-subheader>Moneda</v-subheader>\n          <v-list-tile avatar>\n            <v-list-tile-content>\n              <center>\n                <v-select\n                  v-model=\"select\"\n                  name=\"currency\"\n                  @change=\"changeCurrency($event)\"\n                  :hint=\"`${select.name}, ${select.prefix}`\"\n                  :items=\"getCurrencies.docs\"\n                  item-text=\"name\"\n                  item-value=\"prefix\"\n                  label=\"Seleccione moneda\"\n                  persistent-hint\n                  return-object\n                  single-line\n                  append-icon=\"monetization_on\"\n                  color=\"green\"\n                ></v-select>\n              </center>\n            </v-list-tile-content>\n          </v-list-tile>\n          <!-- <v-list-tile avatar>\n            <v-list-tile-content>\n              <v-list-tile-title>Password</v-list-tile-title>\n              <v-list-tile-sub-title>Require password for purchase or use password to restrict purchase</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>-->\n        </v-list>\n        <v-divider></v-divider>\n        <!-- <v-list three-line subheader>\n          <v-subheader>General</v-subheader>\n          <v-list-tile avatar>\n            <v-list-tile-action>\n              <v-checkbox></v-checkbox>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Notifications</v-list-tile-title>\n              <v-list-tile-sub-title>Notify me about updates to apps or games that I downloaded</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-action>\n              <v-checkbox></v-checkbox>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Sound</v-list-tile-title>\n              <v-list-tile-sub-title>Auto-update apps at any time. Data charges may apply</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile avatar>\n            <v-list-tile-action>\n              <v-checkbox></v-checkbox>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Auto-add widgets</v-list-tile-title>\n              <v-list-tile-sub-title>Automatically add home screen widgets</v-list-tile-sub-title>\n            </v-list-tile-content>\n          </v-list-tile>\n        </v-list>-->\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport store from '../../store/store.js';\nimport { mapGetters, mapMutations, mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      select: {}\n    };\n  },\n\n  created() {\n    this.getAllCurrencies();\n  },\n  mounted() {\n    this.select = this.getUser.currency ? this.getUser.currency : {};\n  },\n  methods: {\n    ...mapMutations({\n      setCurrency: 'currency/SET_CURRENCY',\n      setUser: 'users/setUser'\n    }),\n    ...mapActions({\n      getAllCurrencies: 'currency/getAllCurrencies'\n    }),\n    changeCurrency(event) {\n      let name = 'currency';\n      let obj = {\n        isObject: true,\n        attr: name,\n        value: event\n      };\n      this.setUser(obj);\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getCurrencies: 'currency/getCurrencies',\n      getUser: 'users/user'\n    })\n  },\n\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: (to, from, next) => {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    next();\n  }\n};\n</script>\n<style>\n</style>\n"]}]}