{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/thread-loader/dist/cjs.js!/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/eslint-loader/index.js??ref--13-0!/home/desarrollo/Escritorio/unabasev4/src/store/modules/contacts.js","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/store/modules/contacts.js","mtime":1549388499741},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport api from '../../lib/api';\nexport default {\n  namespaced: true,\n  state: {\n    contacts: [],\n    contact: {}\n  },\n  mutations: {\n    SET_CONTACTS: function SET_CONTACTS(state, payload) {\n      state.contacts = payload;\n    },\n    SET_CONTACT: function SET_CONTACT(state, payload) {\n      console.log(payload);\n\n      if (payload._id) {\n        state.contact = payload;\n      } else {\n        state.contact[payload.attr] = payload.value;\n      }\n    },\n    CLEAN: function CLEAN(state) {\n      state.contact = {};\n    }\n  },\n  actions: {\n    postContact: function postContact(_ref, payload) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        axios.post(api + '/contacts', payload).then(function (data) {\n          // SET CONTACT\n          commit('SET_CONTACT', data.data);\n          resolve(data.data);\n        }).catch(function (err) {\n          reject(err, err.response);\n        });\n      });\n    },\n    findContact: function findContact(_ref2, payload) {\n      var commit = _ref2.commit;\n      return new _Promise(function (resolve, reject) {\n        axios.get(api + '/users/find/' + payload).then(function (data) {\n          commit('SET_CONTACT', {\n            attr: 'user',\n            value: data.data.docs[0] ? data.data.docs[0]._id : null\n          });\n          console.warn('user => ', data.data.docs[0]);\n          resolve(data.data.docs[0] ? data.data.docs[0] : null);\n        }).catch(function (err) {\n          reject(err, err.response);\n        });\n      });\n    }\n  },\n  getters: {\n    getContacts: function getContacts(state) {\n      return state.contacts;\n    },\n    getContact: function getContact(state) {\n      return state.contact;\n    }\n  }\n};",{"version":3,"sources":["/home/desarrollo/Escritorio/unabasev4/src/store/modules/contacts.js"],"names":["axios","api","namespaced","state","contacts","contact","mutations","SET_CONTACTS","payload","SET_CONTACT","console","log","_id","attr","value","CLEAN","actions","postContact","commit","resolve","reject","post","then","data","catch","err","response","findContact","get","docs","warn","getters","getContacts","getContact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,eAAe;AACbC,cAAY,IADC;AAEbC,SAAO;AACLC,cAAU,EADL;AAELC,aAAS;AAFJ,GAFM;AAMbC,aAAW;AACTC,gBADS,wBACIJ,KADJ,EACWK,OADX,EACoB;AAC3BL,YAAMC,QAAN,GAAiBI,OAAjB;AACD,KAHQ;AAITC,eAJS,uBAIGN,KAJH,EAIUK,OAJV,EAImB;AAC1BE,cAAQC,GAAR,CAAYH,OAAZ;;AACA,UAAIA,QAAQI,GAAZ,EAAiB;AACfT,cAAME,OAAN,GAAgBG,OAAhB;AAED,OAHD,MAGO;AACLL,cAAME,OAAN,CAAcG,QAAQK,IAAtB,IAA8BL,QAAQM,KAAtC;AACD;AAEF,KAbQ;AAcTC,SAdS,iBAcHZ,KAdG,EAcI;AACXA,YAAME,OAAN,GAAgB,EAAhB;AACD;AAhBQ,GANE;AA4BbW,WAAS;AAEPC,eAFO,6BAIJT,OAJI,EAIK;AAAA,UADVU,MACU,QADVA,MACU;AACV,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCpB,cACGqB,IADH,CACQpB,MAAM,WADd,EAC2BO,OAD3B,EAEGc,IAFH,CAEQ,gBAAQ;AACZ;AACAJ,iBAAO,aAAP,EAAsBK,KAAKA,IAA3B;AAIAJ,kBAAQI,KAAKA,IAAb;AACD,SATH,EAUGC,KAVH,CAUS,eAAO;AACZJ,iBAAOK,GAAP,EAAYA,IAAIC,QAAhB;AACD,SAZH;AAaD,OAdM,CAAP;AAeD,KApBM;AAsBPC,eAtBO,8BAwBJnB,OAxBI,EAwBK;AAAA,UADVU,MACU,SADVA,MACU;AACV,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCpB,cACG4B,GADH,CACO3B,MAAM,cAAN,GAAuBO,OAD9B,EAEGc,IAFH,CAEQ,gBAAQ;AACZJ,iBAAO,aAAP,EAAsB;AACpBL,kBAAM,MADc;AAEpBC,mBAAQS,KAAKA,IAAL,CAAUM,IAAV,CAAe,CAAf,CAAD,GAAsBN,KAAKA,IAAL,CAAUM,IAAV,CAAe,CAAf,EAAkBjB,GAAxC,GAA8C;AAFjC,WAAtB;AAMAF,kBAAQoB,IAAR,CAAa,UAAb,EAAyBP,KAAKA,IAAL,CAAUM,IAAV,CAAe,CAAf,CAAzB;AACAV,kBAASI,KAAKA,IAAL,CAAUM,IAAV,CAAe,CAAf,CAAD,GAAsBN,KAAKA,IAAL,CAAUM,IAAV,CAAe,CAAf,CAAtB,GAA0C,IAAlD;AACD,SAXH,EAYGL,KAZH,CAYS,eAAO;AACZJ,iBAAOK,GAAP,EAAYA,IAAIC,QAAhB;AACD,SAdH;AAeD,OAhBM,CAAP;AAiBD;AA1CM,GA5BI;AA0EbK,WAAS;AACPC,iBAAa;AAAA,aAAS7B,MAAMC,QAAf;AAAA,KADN;AAEP6B,gBAAY;AAAA,aAAS9B,MAAME,OAAf;AAAA;AAFL;AA1EI,CAAf","sourcesContent":["import axios from 'axios';\nimport api from '../../lib/api'\n\nexport default {\n  namespaced: true,\n  state: {\n    contacts: [],\n    contact: {}\n  },\n  mutations: {\n    SET_CONTACTS(state, payload) {\n      state.contacts = payload;\n    },\n    SET_CONTACT(state, payload) {\n      console.log(payload);\n      if (payload._id) {\n        state.contact = payload\n\n      } else {\n        state.contact[payload.attr] = payload.value;\n      }\n\n    },\n    CLEAN(state) {\n      state.contact = {};\n    },\n\n\n\n\n  },\n  actions: {\n\n    postContact({\n      commit\n    }, payload) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(api + '/contacts', payload)\n          .then(data => {\n            // SET CONTACT\n            commit('SET_CONTACT', data.data);\n\n\n\n            resolve(data.data);\n          })\n          .catch(err => {\n            reject(err, err.response);\n          });\n      });\n    },\n\n    findContact({\n      commit\n    }, payload) {\n      return new Promise((resolve, reject) => {\n        axios\n          .get(api + '/users/find/' + payload)\n          .then(data => {\n            commit('SET_CONTACT', {\n              attr: 'user',\n              value: (data.data.docs[0]) ? data.data.docs[0]._id : null\n            });\n\n\n            console.warn('user => ', data.data.docs[0])\n            resolve((data.data.docs[0]) ? data.data.docs[0] : null);\n          })\n          .catch(err => {\n            reject(err, err.response);\n          });\n      });\n    },\n\n\n  },\n  getters: {\n    getContacts: state => state.contacts,\n    getContact: state => state.contact,\n  }\n};\n"]}]}