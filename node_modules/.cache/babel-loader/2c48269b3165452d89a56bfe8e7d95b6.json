{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/items/item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/items/item.vue","mtime":1552075991867},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions, mapState, mapMutations } from 'vuex';\nimport isMobile from '../../assets/js/isMobile.js';\nimport store from '../../store/store.js';\nimport spinner from '../Dashboard/Components/spinner';\nexport default {\n  props: {\n    propID: null\n  },\n  data: function data() {\n    return {\n      marginMin: 'price',\n      marginMax: 'price',\n      loading: true\n    };\n  },\n  components: {\n    spinner: spinner\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getAllTaxes();\n\n    if (this.$route.params.id) {\n      var params = this.propID != null ? this.propID : this.$route.params.id;\n      this.getOneItem(params).then(function (res) {\n        _this.loading = false;\n        _this.marginMin = _this.getItem.margin.min.percentage != 0 ? 'percentage' : 'price';\n        _this.marginMax = _this.getItem.margin.max.percentage != 0 ? 'percentage' : 'price';\n      });\n    } else {\n      this.loading = false;\n    }\n\n    this.cleanItem();\n  },\n  methods: _objectSpread({}, mapActions({\n    getAllTaxes: 'tax/getAllTaxes',\n    getOneItem: 'items/findItem'\n  }), mapMutations({\n    setItem: 'items/SET_ITEM',\n    handleSelectInput: 'items/HANDLE_SELECT_INPUT',\n    cleanItem: 'items/CLEAN'\n  }), {\n    updateItem: function updateItem(event, name2, name3) {\n      name3 = event.name == 'margin' ? this[name3] : name3;\n      var obj = {\n        attr: event.name,\n        attr2: name2,\n        attr3: name3,\n        value: event.value\n      };\n      this.setItem(obj);\n    },\n    handleSelect: function handleSelect(event) {\n      this.handleSelectInput(event);\n    },\n    handleLock: function handleLock(type) {\n      var state = this.getItem.estimate[type].lock;\n      state = !state;\n      this.setItem({\n        attr: 'estimate',\n        attr2: type,\n        attr3: 'lock',\n        value: state\n      });\n    },\n    handleChange: function handleChange(event, type) {\n      var options = ['price', 'percentage'];\n\n      for (var _i = 0; _i < options.length; _i++) {\n        var option = options[_i];\n        var obj = {\n          attr: 'margin',\n          attr2: type,\n          attr3: option,\n          value: 0\n        };\n        this.setItem(obj);\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapGetters({\n    getItem: 'items/getItem',\n    getTaxes: 'tax/getTaxes'\n  }), {\n    ITEM: function ITEM() {\n      return {\n        name: this.getItem.name,\n        tax: this.getItem.tax,\n        quantity: this.getItem.quantity,\n        estimate: {\n          buy: {\n            lock: this.getItem.estimate.buy.lock,\n            price: this.getItem.estimate.buy.price\n          },\n          sell: {\n            lock: this.getItem.estimate.sell.lock,\n            price: this.getItem.estimate.sell.price\n          }\n        },\n        margin: {\n          max: {\n            percentage: this.getItem.margin.max.percentage,\n            price: this.getItem.margin.max.price\n          },\n          min: {\n            percentage: this.getItem.margin.min.percentage,\n            price: this.getItem.margin.min.price\n          }\n        },\n        price: this.getItem.price\n      };\n    }\n  }),\n  watch: {\n    getItem: {\n      handler: function handler(val) {\n        console.log(val);\n      },\n      deep: true\n    }\n  },\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    next();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    next();\n  }\n};",{"version":3,"sources":["item.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"textField\">\n    <div v-if=\"loading\">\n      <center>\n        <spinner v-if=\"loading\"/>\n      </center>\n    </div>\n\n    <div v-else class=\"md-layout md-gutter md-alignment-center-center\" style=\"margin:0\">\n      <div class=\"md-layout-item md-size-40 md-small-size-100\" style=\"padding:0\">\n        <center>\n          <v-card>\n            <v-img :src=\"require('../../assets/img/item_header.jpg')\" aspect-ratio=\"2.75\">\n              <v-layout column fill-height>\n                <v-card-title>\n                  <v-spacer></v-spacer>\n\n                  <v-btn dark icon>\n                    <v-icon>create</v-icon>\n                  </v-btn>\n                </v-card-title>\n\n                <v-spacer></v-spacer>\n              </v-layout>\n            </v-img>\n            <v-card-title primary-title>\n              <div>\n                <v-subheader>Item</v-subheader>\n\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-100\">\n                    <v-text-field\n                      label=\"Nombre del item\"\n                      name=\"name\"\n                      autofocus\n                      @input.native=\"updateItem($event.target)\"\n                      :value=\"ITEM.name\"\n                      color=\"green\"\n                      single-line\n                      outline\n                      append-icon=\"add_shopping_cart\"\n                    ></v-text-field>\n                  </div>\n                </div>\n\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-100\">\n                    <v-text-field\n                      name=\"price\"\n                      @input.native=\"updateItem($event.target)\"\n                      :value=\"ITEM.price\"\n                      label=\"Precio\"\n                      color=\"green\"\n                      single-line\n                      type=\"number\"\n                      outline\n                      append-icon=\"monetization_on\"\n                    ></v-text-field>\n                  </div>\n                  <!-- <div class=\"md-layout-item md-size-40\">\n                    <v-text-field\n                      name=\"quantity\"\n                      @input.native=\"updateItem($event.target)\"\n                      :value=\"ITEM.quantity\"\n                      type=\"number\"\n                      label=\"Cantidad\"\n                      color=\"green\"\n                      single-line\n                      outline\n                    ></v-text-field>\n                  </div>-->\n                </div>\n\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-100\">\n                    <v-select\n                      append-icon=\"assessment\"\n                      color=\"green\"\n                      name=\"tax\"\n                      @change=\"handleSelect($event)\"\n                      small-chips\n                      return-object\n                      :value=\"ITEM.tax\"\n                      deletable-chips\n                      :items=\"getTaxes.docs\"\n                      :item-text=\"'name'\"\n                      item-value=\"number\"\n                      chips\n                      label=\"Impuesto\"\n                      multiple\n                      outline\n                    ></v-select>\n                  </div>\n                </div>\n\n                <v-subheader>Estimado</v-subheader>\n\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-50\">\n                    <center>\n                      <v-btn\n                        flat\n                        icon\n                        :color=\"(ITEM.estimate.buy.lock) ? 'red' : 'green'\"\n                        @click=\"handleLock('buy')\"\n                      >\n                        <v-icon>{{(ITEM.estimate.buy.lock) ? 'lock' : 'lock_open'}}</v-icon>\n                      </v-btn>\n                    </center>\n                    <v-spacer></v-spacer>\n                    <v-text-field\n                      type=\"number\"\n                      name=\"estimate\"\n                      @input.native=\"updateItem($event.target, 'buy', 'price')\"\n                      :value=\"ITEM.estimate.buy.price\"\n                      label=\"Compra\"\n                      color=\"green\"\n                      single-line\n                      outline\n                    ></v-text-field>\n                  </div>\n                  <div class=\"md-layout-item md-size-50\">\n                    <center>\n                      <v-btn\n                        flat\n                        icon\n                        :color=\"(ITEM.estimate.sell.lock) ? 'red' : 'green'\"\n                        @click=\"handleLock('sell')\"\n                      >\n                        <v-icon>{{(ITEM.estimate.sell.lock) ? 'lock' : 'lock_open'}}</v-icon>\n                      </v-btn>\n                    </center>\n                    <v-text-field\n                      name=\"estimate\"\n                      @input.native=\"updateItem($event.target, 'sell', 'price')\"\n                      :value=\"ITEM.estimate.sell.price\"\n                      type=\"number\"\n                      label=\"Venta\"\n                      color=\"green\"\n                      single-line\n                      outline\n                    ></v-text-field>\n                  </div>\n                </div>\n\n                <v-subheader>Margen</v-subheader>\n\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-50\">\n                    <v-subheader>Maximo +</v-subheader>\n                    <center>\n                      <v-radio-group\n                        row\n                        class=\"align-center justify-center\"\n                        v-model=\"marginMax\"\n                        :mandatory=\"false\"\n                        @change=\"handleChange($event, 'max')\"\n                      >\n                        <v-radio color=\"green\" label=\"$\" name=\"marginMax\" value=\"price\"></v-radio>\n                        <v-radio label=\"%\" color=\"green\" name=\"marginMax\" value=\"percentage\"></v-radio>\n                      </v-radio-group>\n                    </center>\n\n                    <v-text-field\n                      name=\"margin\"\n                      @input.native=\"updateItem($event.target, 'max', 'marginMax')\"\n                      :value=\"(ITEM.margin.max.price != 0)?ITEM.margin.max.price:ITEM.margin.max.percentage\"\n                      type=\"number\"\n                      label\n                      color=\"green\"\n                      single-line\n                      outline\n                      append-icon=\"arrow_upward\"\n                    ></v-text-field>\n                  </div>\n                  <div class=\"md-layout-item md-size-50\">\n                    <v-subheader>Minimo -</v-subheader>\n                    <center>\n                      <v-radio-group\n                        row\n                        class=\"align-center justify-center\"\n                        v-model=\"marginMin\"\n                        :mandatory=\"false\"\n                        @change=\"handleChange($event, 'min')\"\n                      >\n                        <v-radio color=\"green\" label=\"$\" name=\"marginMin\" value=\"price\"></v-radio>\n                        <v-radio name=\"marginMin\" color=\"green\" label=\"%\" value=\"percentage\"></v-radio>\n                      </v-radio-group>\n                    </center>\n                    <v-text-field\n                      class=\"readonly\"\n                      name=\"margin\"\n                      @input.native=\"updateItem($event.target, 'min', 'marginMin')\"\n                      :value=\"(ITEM.margin.min.price != 0) ? ITEM.margin.min.price : ITEM.margin.min.percentage\"\n                      type=\"number\"\n                      label\n                      color=\"green\"\n                      single-line\n                      outline\n                      append-icon=\"arrow_downward\"\n                    ></v-text-field>\n                  </div>\n                </div>\n              </div>\n            </v-card-title>\n          </v-card>\n        </center>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions, mapState, mapMutations } from 'vuex';\nimport isMobile from '../../assets/js/isMobile.js';\nimport store from '../../store/store.js';\nimport spinner from '../Dashboard/Components/spinner';\n\nexport default {\n  props: {\n    propID: null\n  },\n  data() {\n    return {\n      marginMin: 'price',\n      marginMax: 'price',\n      loading: true\n    };\n  },\n  components: {\n    spinner\n  },\n\n  created() {},\n  mounted() {\n    this.getAllTaxes();\n    if (this.$route.params.id) {\n      let params = this.propID != null ? this.propID : this.$route.params.id;\n\n      this.getOneItem(params).then(res => {\n        this.loading = false;\n        this.marginMin =\n          this.getItem.margin.min.percentage != 0 ? 'percentage' : 'price';\n        this.marginMax =\n          this.getItem.margin.max.percentage != 0 ? 'percentage' : 'price';\n      });\n    } else {\n      this.loading = false;\n    }\n\n    this.cleanItem();\n  },\n  methods: {\n    ...mapActions({\n      getAllTaxes: 'tax/getAllTaxes',\n      getOneItem: 'items/findItem'\n    }),\n    ...mapMutations({\n      setItem: 'items/SET_ITEM',\n      handleSelectInput: 'items/HANDLE_SELECT_INPUT',\n      cleanItem: 'items/CLEAN'\n    }),\n    updateItem(event, name2, name3) {\n      name3 = event.name == 'margin' ? this[name3] : name3;\n      let obj = {\n        attr: event.name,\n        attr2: name2,\n        attr3: name3,\n        value: event.value\n      };\n      this.setItem(obj);\n    },\n    handleSelect(event) {\n      this.handleSelectInput(event);\n    },\n    handleLock(type) {\n      let state = this.getItem.estimate[type].lock;\n      state = !state;\n      this.setItem({\n        attr: 'estimate',\n        attr2: type,\n        attr3: 'lock',\n        value: state\n      });\n    },\n    handleChange(event, type) {\n      let options = ['price', 'percentage'];\n      for (let option of options) {\n        let obj = {\n          attr: 'margin',\n          attr2: type,\n          attr3: option,\n          value: 0\n        };\n        this.setItem(obj);\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getItem: 'items/getItem',\n      getTaxes: 'tax/getTaxes'\n    }),\n    ITEM() {\n      return {\n        name: this.getItem.name,\n        tax: this.getItem.tax,\n        quantity: this.getItem.quantity,\n        estimate: {\n          buy: {\n            lock: this.getItem.estimate.buy.lock,\n            price: this.getItem.estimate.buy.price\n          },\n          sell: {\n            lock: this.getItem.estimate.sell.lock,\n            price: this.getItem.estimate.sell.price\n          }\n        },\n        margin: {\n          max: {\n            percentage: this.getItem.margin.max.percentage,\n            price: this.getItem.margin.max.price\n          },\n          min: {\n            percentage: this.getItem.margin.min.percentage,\n            price: this.getItem.margin.min.price\n          }\n        },\n        price: this.getItem.price\n      };\n    }\n  },\n\n  watch: {\n    getItem: {\n      handler(val) {\n        console.log(val);\n      },\n      deep: true\n    }\n  },\n\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: (to, from, next) => {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    next();\n  }\n};\n</script>\n<style>\n#textField /deep/ input {\n  background-color: transparent;\n  border: none;\n  border-bottom: none;\n  border-radius: 0;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  font-size: 16px;\n  margin: 0;\n  margin-top: 10px;\n  padding: 0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n  -webkit-transition: none;\n  transition: none;\n  transition: none;\n  transition: none;\n  max-height: none !important;\n}\n</style>\n"],"sourceRoot":"src/pages/items"}]}