{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/thread-loader/dist/cjs.js!/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/incomes/components/income_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/incomes/components/income_list.vue","mtime":1552600577429},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex';\nimport { Modal } from '@/components';\nimport itemForm from '../components/income_form';\nimport isMobile from '../../../assets/js/isMobile.js';\nimport dialogButton from '../../Dashboard/Components/dialogButton';\nimport { ZoomCenterTransition, SlideXRightTransition } from 'vue2-transitions';\nimport spinner from '../../Dashboard/Components/spinner';\nimport itemDetailsComponent from '../../items/item';\nexport default {\n  props: {// items: []\n  },\n  components: {\n    Modal: Modal,\n    itemForm: itemForm,\n    dialogButton: dialogButton,\n    ZoomCenterTransition: ZoomCenterTransition,\n    SlideXRightTransition: SlideXRightTransition,\n    spinner: spinner,\n    itemDetailsComponent: itemDetailsComponent\n  },\n  data: function data() {\n    return {\n      localItems: {},\n      showDialog: false,\n      isMobile: '',\n      selectedItems: [],\n      showCheckbox: false,\n      showItem: true,\n      sheet: false,\n      localQuantity: 0,\n      checkboxTest: null,\n      itemDetails: false,\n      actualItem: {},\n      currencyScope: {},\n      lineOptions: false\n    };\n  },\n  created: function created() {\n    this.localItems = this.items;\n    this.isMobile = isMobile;\n  },\n  mounted: function mounted() {\n    this.localQuantity = !isNaN(this.getItem.quantity) ? this.getItem.quantity : _parseInt(this.getItem.quantity);\n  },\n  methods: _objectSpread({}, mapActions({\n    deleteLine: 'incomes/deleteLine',\n    postLine: 'incomes/postLine',\n    putLine: 'incomes/putLine',\n    findItem: 'items/findItem',\n    putItem: 'items/putItem'\n  }), mapMutations({\n    changeItem: 'items/SET_ITEM',\n    hideShowBottom: 'HIDE_SHOW_BOTTOM',\n    cleanItem: 'items/CLEAN',\n    newLine: 'incomes/ADD_LINE',\n    setGlobalsCreate: 'items/SET_GLOBALS_CREATE',\n    editSelection: 'items/EDIT_SELECTION',\n    handleCheckbox: 'items/HANDLE_CHECKBOX',\n    handleSelections: 'items/HANDLE_SELECTIONS'\n  }), {\n    selectItem: function selectItem(index, multiple) {\n      if (multiple) {\n        this.handleSelections({\n          var: 'selectedItems',\n          index: index\n        });\n      } else {\n        this.handleSelections({\n          var: 'selectedItems',\n          index: index,\n          isSingle: true\n        });\n      }\n    },\n    updateItem: function updateItem(event) {\n      if (this.getSelectedItems.length > 0) {\n        var obj = {\n          attr: event.name,\n          value: event.value\n        };\n        this.setGlobalsCreate(obj);\n      } else {\n        var _obj = {\n          attr: event.name,\n          value: event.value\n        };\n        this.changeItem(_obj);\n      }\n    },\n    closeDialog: function closeDialog(dialog, bottomBar) {\n      if (this.isMobile) {\n        this.showDialog = dialog;\n        this.hideShowBottom(bottomBar);\n      }\n    },\n    addLine: function addLine() {\n      var _this = this;\n\n      this.updateItem({\n        name: 'movementType',\n        value: this.MOVEMENT_TYPE\n      });\n\n      if (this.getSelectedItems.length > 0) {\n        console.log('entro en el muchos');\n        this.handleEditSelection(false);\n      } else {\n        if (this.getItem.name) {\n          if (!this.getItem._id) {\n            this.postLine(this.getItem).then(function (res) {\n              _this.$toasted.show('Agregado con exito!');\n\n              _this.closeDialog(false, false);\n            });\n          } else {\n            console.log('entro en el putttt');\n            this.changeItem({\n              attr: 'currency',\n              value: this.getIncome.currency\n            });\n            this.putLine(this.getItem).then(function (res) {\n              _this.closeDialog(false, false);\n\n              _this.cleanItem();\n            });\n          }\n        } else {\n          this.$toasted.show('Item inexistente!', {\n            type: 'danger'\n          });\n        }\n      }\n    },\n    // ELIMINAR ITEM DE LA VENTA\n    removeLine: function removeLine(line) {\n      var _this2 = this;\n\n      this.showItem = false;\n      this.deleteLine(line).then(function (res) {\n        _this2.$toasted.show('Eliminado con exito!');\n\n        _this2.closeDialog(false, false);\n\n        _this2.showItem = true;\n      });\n    },\n    showOptions: function showOptions(line, index) {\n      this.lineOptions = !this.lineOptions;\n    },\n    changeQuantity: function changeQuantity(type) {\n      if (this.localQuantity >= 0) {\n        type == 'add' ? this.localQuantity = this.localQuantity + 1 : this.localQuantity = this.localQuantity - 1;\n      } else {\n        this.localQuantity = 0;\n      }\n    },\n    handleEditSelection: function handleEditSelection(isDelete) {\n      var editObj = {\n        var: 'selectedItems',\n        movementType: this.MOVEMENT_TYPE,\n        edit: {\n          price: this.getGlobalItemVars.price,\n          quantity: this.getGlobalItemVars.quantity\n        },\n        delete: isDelete\n      };\n      this.editSelection(editObj);\n    },\n    seeDetails: function seeDetails(line) {\n      var _this3 = this;\n\n      this.findItem(line.item).then(function (res) {\n        console.log(res);\n        _this3.actualItem = res;\n        _this3.itemDetails = true;\n      });\n    },\n    saveItem: function saveItem() {\n      var _this4 = this;\n\n      this.putItem(this.getItem).then(function (res) {\n        _this4.itemDetails = false;\n      });\n    },\n    getLastPrice: function getLastPrice() {\n      var _this5 = this;\n\n      // console.log(this.getIncome.lines[this.getSelectedItems[0]]);\n      // console.log(this.getUserLastItems[this.getSelectedItems[0]]);\n      if (this.getIncome.lines.length > 0 && this.getSelectedItems.length == 1) {\n        var lastPrice = this.getIncome.lines[this.getSelectedItems[0]].item.global.filter(function (item) {\n          return item.currency == _this5.getUser.currency._id;\n        });\n        console.log(lastPrice);\n\n        if (this.MOVEMENT_TYPE == 'income') {\n          return lastPrice[0] ? lastPrice[0].lastPrice.sell : 0;\n        } else {\n          return lastPrice[0] ? lastPrice[0].lastPrice.buy : 0;\n        }\n      } else {\n        return 0;\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapGetters({\n    getItem: 'items/getItem',\n    getIncome: 'incomes/getIncome',\n    getSelectedItems: 'items/getSelectedItems',\n    getGlobalItemVars: 'items/getGlobalItemVars',\n    getUserLastItems: 'items/getUserLastItems',\n    getSelectedItemsAdd: 'items/getSelectedItemsAdd',\n    getUser: 'users/user'\n  }), {\n    MOVEMENT_TYPE: function MOVEMENT_TYPE() {\n      return this.$route.name == 'Income' ? 'income' : 'outcome';\n    }\n  }),\n  watch: {\n    getSelectedItems: function getSelectedItems(val) {\n      this.sheet = this.getSelectedItems.length > 0 ? true : false;\n    },\n    localQuantity: function localQuantity(val) {\n      var number = val < 0 ? 0 : val;\n\n      if (this.getSelectedItems.length > 0) {\n        this.setGlobalsCreate({\n          attr: 'quantity',\n          value: _parseInt(number)\n        });\n      } else {\n        this.changeItem({\n          attr: 'quantity',\n          value: _parseInt(number)\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["income_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- ITEM DETAILS DIALOG -->\n    <v-dialog\n      v-model=\"itemDetails\"\n      fullscreen\n      hide-overlay\n      transition=\"dialog-bottom-transition\"\n      id=\"itemDetails\"\n    >\n      <v-card>\n        <v-toolbar dark color=\"green\">\n          <v-toolbar-items>\n            <v-btn dark flat @click=\"itemDetails = false\">SALIR</v-btn>\n          </v-toolbar-items>\n\n          <v-spacer></v-spacer>\n          <v-toolbar-title>{{actualItem.name | uppercase}}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-toolbar-items>\n            <v-btn dark flat @click=\"saveItem()\">Guardar</v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n        <v-list three-line subheader>\n          <itemDetailsComponent v-if=\"itemDetails\" :propID=\"actualItem._id\"/>\n        </v-list>\n      </v-card>\n    </v-dialog>\n\n    <!-- // ITEM DETAILS DIALOG -->\n    <div class=\"md-layout\" v-if=\"(getIncome.lines) && getIncome.lines.length > 0 && isMobile\">\n      <div class=\"md-layout-item md-size-100\" style=\"padding: 0;\">\n        <ul class=\"collection\" style=\"border:none;\">\n          <div>\n            <v-list two-line subheader>\n              <transition-group name=\"slide-fade\">\n                <v-list-tile\n                  style=\"padding:0 !important\"\n                  v-for=\"(line, index) in getIncome.lines\"\n                  :key=\"line._id\"\n                  avatar\n                  id=\"itemList\"\n                  :value=\"selectedItems\"\n                  v-touch=\"{ \n                    left: (event) => showOptions(line, index),\n                    right: (event) => removeLine(line)\n                  }\"\n                  v-init:currencyScope=\"{symbol:getIncome.currency.prefix,decimalNumber:getIncome.currency.precition, options: {thousandsSeparator:getIncome.currency.thousand,decimalSeparator:getIncome.currency.decimal,spaceBetweenAmountAndSymbol: true} }\"\n                >\n                  <div style=\"display: contents;\" :class=\"{'hideItem' : !lineOptions}\">\n                    <v-list-tile-content>\n                      <div class=\"md-layout\">\n                        <div class=\"md-layout-item md-size-33\">\n                          <center>\n                            <v-btn flat icon color=\"green\">\n                              <v-icon>edit</v-icon>\n                            </v-btn>\n                          </center>\n                        </div>\n                        <div class=\"md-layout-item md-size-33\">\n                          <center>\n                            <v-btn flat icon color=\"blue darken-2\">\n                              <v-icon>insert_chart</v-icon>\n                            </v-btn>\n                          </center>\n                        </div>\n                        <div class=\"md-layout-item md-size-33\">\n                          <center>\n                            <v-btn flat icon color=\"yellow darken-2\">\n                              <v-icon>person</v-icon>\n                            </v-btn>\n                          </center>\n                        </div>\n                      </div>\n                    </v-list-tile-content>\n                  </div>\n\n                  <div style=\"display: contents;\" :class=\"{'hideItem' : lineOptions}\">\n                    <v-list-tile-avatar id=\"avatar\" @click=\"selectItem(index, true)\">\n                      <v-icon\n                        v-if=\"getSelectedItems.indexOf(index) < 0\"\n                        class=\"headline white green--text\"\n                      >{{line.name.charAt(0) | uppercase}}</v-icon>\n                      <v-icon v-else class=\"green white--text\">check</v-icon>\n                    </v-list-tile-avatar>\n\n                    <v-list-tile-content @click=\"selectItem(index)\">\n                      <v-list-tile-title style=\"color: #424242\" class=\"body-1\">{{ line.name }}</v-list-tile-title>\n                      <v-list-tile-sub-title\n                        class=\"caption\"\n                      >{{line.quantity}} x {{line.price | currency(currencyScope.symbol, currencyScope.decimalNumber, currencyScope.opt)}}</v-list-tile-sub-title>\n                    </v-list-tile-content>\n                    <v-list-tile-action @click=\"selectItem(index)\">\n                      <div class=\"md-layout\">\n                        <div\n                          :class=\"[(showCheckbox)?'md-layout-item md-size-80':'md-layout-item md-size-100']\"\n                          style=\"padding: 0\"\n                        >\n                          <small\n                            class=\"body-1 green--text\"\n                          >{{line.price * line.quantity | currency(currencyScope.symbol, currencyScope.decimalNumber, currencyScope.opt)}}</small>\n                        </div>\n                      </div>\n                    </v-list-tile-action>\n                  </div>\n                </v-list-tile>\n              </transition-group>\n              <!-- @click=\"seeDetails(line)\" -->\n            </v-list>\n          </div>\n        </ul>\n      </div>\n    </div>\n\n    <div class=\"md-layout\" v-if=\"(getIncome.lines) && (getIncome.lines.length > 0) && !isMobile\">\n      <div class=\"md-layout-item md-size-100 md-small-size-100\" style=\"padding: 0 !important;\">\n        <!-- <md-content class=\"md-scrollbar\"> -->\n        <md-content class=\"md-scrollbar\" style=\"height: 250px;\">\n          <!-- <center>\n            <spinner></spinner>\n          </center>-->\n          <ul class=\"collection\" style=\"border:none;\">\n            <div>\n              <v-list two-line subheader>\n                <transition-group name=\"slide-fade\">\n                  <v-list-tile\n                    style=\"padding:0 !important\"\n                    v-for=\"(line, index) in getIncome.lines\"\n                    :key=\"line._id\"\n                    avatar\n                    id=\"itemList\"\n                    :value=\"selectedItems\"\n                    v-hammer:swipe.right=\"(event)=> removeLine(line)\"\n                    v-init:currencyScope=\"{symbol:getIncome.currency.prefix,decimalNumber:2, options: {thousandsSeparator:getIncome.currency.thousand,decimalSeparator:getIncome.currency.decimal,spaceBetweenAmountAndSymbol: true} }\"\n                  >\n                    <div style=\"display: contents;\">\n                      <v-list-tile-avatar @click=\"seeDetails(line)\">\n                        <v-icon\n                          v-if=\"getSelectedItems.indexOf(index) < 0\"\n                          class=\"headline white green--text\"\n                        >{{line.name.charAt(0) | uppercase}}</v-icon>\n                        <v-icon v-else class=\"green white--text\">check</v-icon>\n                      </v-list-tile-avatar>\n                      <v-list-tile-content @click=\"selectItem(index)\">\n                        <v-list-tile-title style=\"color: #424242\" class=\"body-1\">{{ line.name }}</v-list-tile-title>\n                        <v-list-tile-sub-title\n                          class=\"caption\"\n                        >{{line.quantity}} x {{line.price | currency(currencyScope.symbol, currencyScope.decimalNumber, currencyScope.opt)}}</v-list-tile-sub-title>\n                      </v-list-tile-content>\n\n                      <v-list-tile-action>\n                        <div class=\"md-layout\">\n                          <div\n                            :class=\"[(showCheckbox)?'md-layout-item md-size-80':'md-layout-item md-size-100']\"\n                            style=\"padding: 0\"\n                          >\n                            <small\n                              class=\"body-1 green--text\"\n                            >{{line.price * line.quantity | currency(currencyScope.symbol, currencyScope.decimalNumber, currencyScope.opt)}}</small>\n                          </div>\n                        </div>\n                      </v-list-tile-action>\n                    </div>\n                  </v-list-tile>\n                </transition-group>\n              </v-list>\n            </div>\n          </ul>\n        </md-content>\n      </div>\n    </div>\n    <div class=\"md-layout\" v-if=\"getIncome.lines.length <= 0\" style=\"height: 250px;\">\n      <div class=\"md-layout-item md-size-100 md-small-size-100\">\n        <center>\n          <!-- <md-empty-state class=\"md-info\" md-icon=\"shopping_basket\" md-label=\"Lista vacia\"></md-empty-state> -->\n        </center>\n      </div>\n    </div>\n\n    <br>\n\n    <br>\n\n    <v-bottom-sheet inset hide-overlay persistent v-model=\"sheet\">\n      <v-card tile>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-90\">\n            <v-subheader v-if=\"getSelectedItems.length <= 0\">{{getItem.name |uppercase}}</v-subheader>\n            <v-btn\n              v-else\n              flat\n              color=\"red\"\n              class=\"pull-left\"\n              @click=\"handleEditSelection(true); sheet = !sheet\"\n            >ELIMINAR</v-btn>\n          </div>\n          <div class=\"md-layout-item md-size-10\">\n            <v-btn flat color=\"green \" class=\"pull-right\" @click=\"addLine(); sheet = !sheet\">GUARDAR</v-btn>\n          </div>\n        </div>\n\n        <div class=\"md-layout\" v-if=\"getSelectedItems.length == 1 || getItem.item\">\n          <div class=\"md-layout-item md-size-50\">\n            <center>\n              <small class=\"md-success\" style=\"color:green\">Ultimo precio</small>\n\n              <p\n                v-if=\"getSelectedItems.length == 1\"\n              >{{getLastPrice() | currency(currencyScope.symbol, currencyScope.decimalNumber, currencyScope.opt)}}</p>\n            </center>\n          </div>\n          <div class=\"md-layout-item md-size-50\">\n            <center>\n              <small style=\"color:green\">En stock</small>\n              <p>$ 95.000</p>\n            </center>\n          </div>\n        </div>\n        <div class=\"md-layout\">\n          <div\n            class=\"md-layout-item md-size-100\"\n            style=\"padding:0\"\n            v-if=\"getSelectedItems.length == 1 || getItem.item\"\n          >\n            <center>\n              <div class=\"md-layout\">\n                <div class=\"md-layout-item md-size-100\" style=\"padding:0\">\n                  <center>\n                    <br>\n                    <v-list>\n                      <v-subheader v-if=\"getItem.item\">{{getItem.name | uppercase}}</v-subheader>\n\n                      <v-list-tile>\n                        <v-layout justify-center fill-height>\n                          <v-flex xs6 id=\"textField\">\n                            <v-text-field\n                              name=\"price\"\n                              @input.native=\"updateItem($event.target)\"\n                              type=\"number\"\n                              label=\"Precio\"\n                              solo\n                              append-icon=\"attach_money\"\n                              color=\"green\"\n                            ></v-text-field>\n                          </v-flex>\n                          <v-spacer></v-spacer>\n                          <h4></h4>\n                          <v-spacer></v-spacer>\n                          <v-flex xs6>\n                            <v-layout id=\"textField\">\n                              <v-flex xs9>\n                                <v-text-field\n                                  @input.native=\"updateItem($event.target)\"\n                                  name=\"quantity\"\n                                  type=\"number\"\n                                  label=\"#\"\n                                  min=\"0\"\n                                  v-model=\"localQuantity\"\n                                  solo\n                                  append-icon=\"swap_vert\"\n                                  color=\"green\"\n                                ></v-text-field>\n                              </v-flex>\n                              <v-spacer></v-spacer>\n                              <v-flex xs3 style=\"margin-top: -14%\">\n                                <v-layout align-center>\n                                  <v-flex xs12>\n                                    <v-btn\n                                      flat\n                                      icon\n                                      color=\"green white--text\"\n                                      @click=\"changeQuantity('add')\"\n                                    >\n                                      <v-icon>add</v-icon>\n                                    </v-btn>\n                                  </v-flex>\n                                </v-layout>\n\n                                <v-layout align-center>\n                                  <v-flex xs12>\n                                    <v-btn\n                                      flat\n                                      icon\n                                      color=\"red white--text\"\n                                      @click=\"changeQuantity('remove')\"\n                                    >\n                                      <v-icon>remove</v-icon>\n                                    </v-btn>\n                                  </v-flex>\n                                </v-layout>\n                              </v-flex>\n                            </v-layout>\n                          </v-flex>\n                        </v-layout>\n                      </v-list-tile>\n                    </v-list>\n                    <br>\n                  </center>\n                </div>\n              </div>\n            </center>\n          </div>\n          <!-- <zoom-center-transition :duration=\"1\" v-else> -->\n          <div class=\"md-layout-item md-size-100\" v-else>\n            <br>\n            <v-layout>\n              <v-flex xs12 justify-center>\n                <v-list>\n                  <v-list-tile>\n                    <v-layout align-center justify-center row fill-height>\n                      <v-flex xs4>\n                        <v-btn\n                          class=\"pull-right\"\n                          icon\n                          color=\"red white--text\"\n                          @click=\"changeQuantity('remove')\"\n                        >\n                          <v-icon>remove</v-icon>\n                        </v-btn>\n                      </v-flex>\n                      <v-flex xs4 id=\"textField\">\n                        <v-text-field\n                          @input.native=\"updateItem($event.target)\"\n                          name=\"quantity\"\n                          type=\"number\"\n                          label=\"#\"\n                          min=\"0\"\n                          v-model=\"localQuantity\"\n                          solo\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs4>\n                        <v-btn icon color=\"green white--text\" @click=\"changeQuantity('add')\">\n                          <v-icon>add</v-icon>\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                  </v-list-tile>\n                </v-list>\n              </v-flex>\n            </v-layout>\n          </div>\n          <!-- </zoom-center-transition> -->\n        </div>\n      </v-card>\n    </v-bottom-sheet>\n  </div>\n</template>\n<script>\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex';\nimport { Modal } from '@/components';\nimport itemForm from '../components/income_form';\nimport isMobile from '../../../assets/js/isMobile.js';\nimport dialogButton from '../../Dashboard/Components/dialogButton';\nimport { ZoomCenterTransition, SlideXRightTransition } from 'vue2-transitions';\nimport spinner from '../../Dashboard/Components/spinner';\nimport itemDetailsComponent from '../../items/item';\n\nexport default {\n  props: {\n    // items: []\n  },\n\n  components: {\n    Modal,\n    itemForm,\n    dialogButton,\n    ZoomCenterTransition,\n    SlideXRightTransition,\n    spinner,\n    itemDetailsComponent\n  },\n\n  data() {\n    return {\n      localItems: {},\n      showDialog: false,\n      isMobile: '',\n      selectedItems: [],\n      showCheckbox: false,\n      showItem: true,\n      sheet: false,\n      localQuantity: 0,\n      checkboxTest: null,\n      itemDetails: false,\n      actualItem: {},\n      currencyScope: {},\n      lineOptions: false\n    };\n  },\n\n  created() {\n    this.localItems = this.items;\n    this.isMobile = isMobile;\n  },\n  mounted() {\n    this.localQuantity = !isNaN(this.getItem.quantity)\n      ? this.getItem.quantity\n      : parseInt(this.getItem.quantity);\n  },\n\n  methods: {\n    ...mapActions({\n      deleteLine: 'incomes/deleteLine',\n      postLine: 'incomes/postLine',\n      putLine: 'incomes/putLine',\n      findItem: 'items/findItem',\n      putItem: 'items/putItem'\n    }),\n    ...mapMutations({\n      changeItem: 'items/SET_ITEM',\n      hideShowBottom: 'HIDE_SHOW_BOTTOM',\n      cleanItem: 'items/CLEAN',\n      newLine: 'incomes/ADD_LINE',\n      setGlobalsCreate: 'items/SET_GLOBALS_CREATE',\n      editSelection: 'items/EDIT_SELECTION',\n      handleCheckbox: 'items/HANDLE_CHECKBOX',\n      handleSelections: 'items/HANDLE_SELECTIONS'\n    }),\n\n    selectItem(index, multiple) {\n      if (multiple) {\n        this.handleSelections({ var: 'selectedItems', index: index });\n      } else {\n        this.handleSelections({\n          var: 'selectedItems',\n          index: index,\n          isSingle: true\n        });\n      }\n    },\n\n    updateItem(event) {\n      if (this.getSelectedItems.length > 0) {\n        let obj = {\n          attr: event.name,\n          value: event.value\n        };\n        this.setGlobalsCreate(obj);\n      } else {\n        let obj = {\n          attr: event.name,\n          value: event.value\n        };\n        this.changeItem(obj);\n      }\n    },\n    closeDialog(dialog, bottomBar) {\n      if (this.isMobile) {\n        this.showDialog = dialog;\n        this.hideShowBottom(bottomBar);\n      }\n    },\n\n    addLine() {\n      this.updateItem({ name: 'movementType', value: this.MOVEMENT_TYPE });\n\n      if (this.getSelectedItems.length > 0) {\n        console.log('entro en el muchos');\n        this.handleEditSelection(false);\n      } else {\n        if (this.getItem.name) {\n          if (!this.getItem._id) {\n            this.postLine(this.getItem).then(res => {\n              this.$toasted.show('Agregado con exito!');\n              this.closeDialog(false, false);\n            });\n          } else {\n            console.log('entro en el putttt');\n            this.changeItem({\n              attr: 'currency',\n              value: this.getIncome.currency\n            });\n            this.putLine(this.getItem).then(res => {\n              this.closeDialog(false, false);\n              this.cleanItem();\n            });\n          }\n        } else {\n          this.$toasted.show('Item inexistente!', { type: 'danger' });\n        }\n      }\n    },\n\n    // ELIMINAR ITEM DE LA VENTA\n    removeLine(line) {\n      this.showItem = false;\n      this.deleteLine(line).then(res => {\n        this.$toasted.show('Eliminado con exito!');\n        this.closeDialog(false, false);\n        this.showItem = true;\n      });\n    },\n    showOptions(line, index) {\n      this.lineOptions = !this.lineOptions;\n    },\n\n    changeQuantity(type) {\n      if (this.localQuantity >= 0) {\n        type == 'add'\n          ? (this.localQuantity = this.localQuantity + 1)\n          : (this.localQuantity = this.localQuantity - 1);\n      } else {\n        this.localQuantity = 0;\n      }\n    },\n    handleEditSelection(isDelete) {\n      let editObj = {\n        var: 'selectedItems',\n        movementType: this.MOVEMENT_TYPE,\n        edit: {\n          price: this.getGlobalItemVars.price,\n          quantity: this.getGlobalItemVars.quantity\n        },\n        delete: isDelete\n      };\n\n      this.editSelection(editObj);\n    },\n\n    seeDetails(line) {\n      this.findItem(line.item).then(res => {\n        console.log(res);\n        this.actualItem = res;\n        this.itemDetails = true;\n      });\n    },\n    saveItem() {\n      this.putItem(this.getItem).then(res => {\n        this.itemDetails = false;\n      });\n    },\n    getLastPrice() {\n      // console.log(this.getIncome.lines[this.getSelectedItems[0]]);\n      // console.log(this.getUserLastItems[this.getSelectedItems[0]]);\n      if (\n        this.getIncome.lines.length > 0 &&\n        this.getSelectedItems.length == 1\n      ) {\n        let lastPrice = this.getIncome.lines[\n          this.getSelectedItems[0]\n        ].item.global.filter(\n          item => item.currency == this.getUser.currency._id\n        );\n\n        console.log(lastPrice);\n        if (this.MOVEMENT_TYPE == 'income') {\n          return lastPrice[0] ? lastPrice[0].lastPrice.sell : 0;\n        } else {\n          return lastPrice[0] ? lastPrice[0].lastPrice.buy : 0;\n        }\n      } else {\n        return 0;\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getItem: 'items/getItem',\n      getIncome: 'incomes/getIncome',\n      getSelectedItems: 'items/getSelectedItems',\n      getGlobalItemVars: 'items/getGlobalItemVars',\n      getUserLastItems: 'items/getUserLastItems',\n      getSelectedItemsAdd: 'items/getSelectedItemsAdd',\n      getUser: 'users/user'\n    }),\n    MOVEMENT_TYPE() {\n      return this.$route.name == 'Income' ? 'income' : 'outcome';\n    }\n  },\n  watch: {\n    getSelectedItems(val) {\n      this.sheet = this.getSelectedItems.length > 0 ? true : false;\n    },\n    localQuantity: function(val) {\n      let number = val < 0 ? 0 : val;\n      if (this.getSelectedItems.length > 0) {\n        this.setGlobalsCreate({ attr: 'quantity', value: parseInt(number) });\n      } else {\n        this.changeItem({\n          attr: 'quantity',\n          value: parseInt(number)\n        });\n      }\n    }\n  }\n};\n</script>\n<style>\n.md-content {\n  min-width: 100%;\n  max-height: 300px;\n  overflow: auto;\n}\n.md-big-hide {\n  display: none;\n}\n.itemListOptions {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s, opacity 0.3s linear;\n}\n#itemList:hover .itemListOptions {\n  visibility: visible;\n  opacity: 1;\n}\n.collection .collection-item.avatar {\n  min-height: 69px !important;\n}\n.collection .collection-item {\n  border-bottom: none !important;\n}\n\n@media only screen and (max-width: 599px) {\n  .v-bottom-sheet.v-dialog.v-bottom-sheet--inset {\n    margin-bottom: 15%;\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 992px) {\n  .v-dialog.v-dialog--active.v-dialog--fullscreen {\n    padding-left: 5.5% !important;\n  }\n}\n\n/* .v-avatar {\n  border-radius: 100%;\n  border-color: green;\n  border-style: solid;\n} */\n\n.hideItem {\n  display: none !important;\n}\n</style>\n"],"sourceRoot":"src/pages/incomes/components"}]}