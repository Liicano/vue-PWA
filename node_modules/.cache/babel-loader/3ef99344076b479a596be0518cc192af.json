{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/eslint-loader/index.js??ref--13-0!/home/desarrollo/Escritorio/unabasev4/src/store/modules/comments.js","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/store/modules/comments.js","mtime":1547153505013},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport api from '../../lib/api';\nexport default {\n  namespaced: true,\n  state: {\n    comments: [],\n    comment: ''\n  },\n  mutations: {\n    SET_COMMENTS: function SET_COMMENTS(state, payload) {\n      state.comments = payload;\n    },\n    SET_COMMENT: function SET_COMMENT(state, payload) {\n      state.comment = payload;\n    },\n    ADD_COMMENT: function ADD_COMMENT(state, payload) {\n      state.comments.unshift(payload);\n    }\n  },\n  actions: {\n    getAllComments: function getAllComments(_ref, payload) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        axios.get(api + '/comments/' + payload.parent + '/' + payload.type).then(function (data) {\n          commit('SET_COMMENTS', data.data);\n          resolve(data.data);\n        }).catch(function (err) {\n          reject(err, err.response);\n        });\n      });\n    },\n    postComment: function postComment(_ref2, payload) {\n      var commit = _ref2.commit;\n      console.log(payload);\n      var comnt = {\n        from: {\n          id: payload.type == 'item' ? this.getters['items/getItem']._id : payload.type == 'movement' ? this.getters['incomes/getIncome']._id : null,\n          name: payload.type\n        },\n        text: payload.txt\n      };\n      console.log(comnt);\n      return new _Promise(function (resolve, reject) {\n        axios.post(api + '/comments', comnt).then(function (data) {\n          commit('ADD_COMMENT', data.data);\n          resolve(data.data);\n        }).catch(function (err) {\n          reject(err, err.response);\n        });\n      });\n      console.log(payload);\n    }\n  },\n  getters: {\n    getComments: function getComments(state) {\n      return state.comments;\n    },\n    getComment: function getComment(state) {\n      return state.comment;\n    }\n  }\n};",{"version":3,"sources":["/home/desarrollo/Escritorio/unabasev4/src/store/modules/comments.js"],"names":["axios","api","namespaced","state","comments","comment","mutations","SET_COMMENTS","payload","SET_COMMENT","ADD_COMMENT","unshift","actions","getAllComments","commit","resolve","reject","get","parent","type","then","data","catch","err","response","postComment","console","log","comnt","from","id","getters","_id","name","text","txt","post","getComments","getComment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,eAAe;AACbC,cAAY,IADC;AAEbC,SAAO;AACLC,cAAU,EADL;AAELC,aAAS;AAFJ,GAFM;AAMbC,aAAW;AACTC,gBADS,wBACIJ,KADJ,EACWK,OADX,EACoB;AAC3BL,YAAMC,QAAN,GAAiBI,OAAjB;AACD,KAHQ;AAITC,eAJS,uBAIGN,KAJH,EAIUK,OAJV,EAImB;AAC1BL,YAAME,OAAN,GAAgBG,OAAhB;AACD,KANQ;AAQTE,eARS,uBAQGP,KARH,EAQUK,OARV,EAQmB;AAC1BL,YAAMC,QAAN,CAAeO,OAAf,CAAuBH,OAAvB;AACD;AAVQ,GANE;AAmBbI,WAAS;AAEPC,kBAFO,gCAIJL,OAJI,EAIK;AAAA,UADVM,MACU,QADVA,MACU;AACV,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtChB,cACGiB,GADH,CACOhB,MAAM,YAAN,GAAqBO,QAAQU,MAA7B,GAAsC,GAAtC,GAA4CV,QAAQW,IAD3D,EAEGC,IAFH,CAEQ,gBAAQ;AACZN,iBAAO,cAAP,EAAuBO,KAAKA,IAA5B;AACAN,kBAAQM,KAAKA,IAAb;AACD,SALH,EAMGC,KANH,CAMS,eAAO;AACZN,iBAAOO,GAAP,EAAYA,IAAIC,QAAhB;AACD,SARH;AASD,OAVM,CAAP;AAWD,KAhBM;AAkBPC,eAlBO,8BAoBJjB,OApBI,EAoBK;AAAA,UADVM,MACU,SADVA,MACU;AACVY,cAAQC,GAAR,CAAYnB,OAAZ;AACA,UAAIoB,QAAQ;AACVC,cAAM;AACJC,cAAKtB,QAAQW,IAAR,IAAgB,MAAjB,GAA2B,KAAKY,OAAL,CAAa,eAAb,EAA8BC,GAAzD,GAAgExB,QAAQW,IAAR,IAAgB,UAAjB,GAA+B,KAAKY,OAAL,CAAa,mBAAb,EAAkCC,GAAjE,GAAuE,IADtI;AAEJC,gBAAMzB,QAAQW;AAFV,SADI;AAKVe,cAAM1B,QAAQ2B;AALJ,OAAZ;AAQAT,cAAQC,GAAR,CAAYC,KAAZ;AAEA,aAAO,aAAY,UAACb,OAAD,EAAUC,MAAV,EAAqB;AACtChB,cACGoC,IADH,CACQnC,MAAM,WADd,EAC2B2B,KAD3B,EAEGR,IAFH,CAEQ,gBAAQ;AACZN,iBAAO,aAAP,EAAsBO,KAAKA,IAA3B;AACAN,kBAAQM,KAAKA,IAAb;AACD,SALH,EAMGC,KANH,CAMS,eAAO;AACZN,iBAAOO,GAAP,EAAYA,IAAIC,QAAhB;AACD,SARH;AASD,OAVM,CAAP;AAWAE,cAAQC,GAAR,CAAYnB,OAAZ;AACD;AA5CM,GAnBI;AAkEbuB,WAAS;AACPM,iBAAa;AAAA,aAASlC,MAAMC,QAAf;AAAA,KADN;AAEPkC,gBAAY;AAAA,aAASnC,MAAME,OAAf;AAAA;AAFL;AAlEI,CAAf","sourcesContent":["import axios from 'axios';\nimport api from '../../lib/api'\n\nexport default {\n  namespaced: true,\n  state: {\n    comments: [],\n    comment: ''\n  },\n  mutations: {\n    SET_COMMENTS(state, payload) {\n      state.comments = payload;\n    },\n    SET_COMMENT(state, payload) {\n      state.comment = payload;\n    },\n\n    ADD_COMMENT(state, payload) {\n      state.comments.unshift(payload);\n    }\n\n  },\n  actions: {\n\n    getAllComments({\n      commit\n    }, payload) {\n      return new Promise((resolve, reject) => {\n        axios\n          .get(api + '/comments/' + payload.parent + '/' + payload.type)\n          .then(data => {\n            commit('SET_COMMENTS', data.data);\n            resolve(data.data);\n          })\n          .catch(err => {\n            reject(err, err.response);\n          });\n      });\n    },\n\n    postComment({\n      commit\n    }, payload) {\n      console.log(payload);\n      let comnt = {\n        from: {\n          id: (payload.type == 'item') ? this.getters['items/getItem']._id : (payload.type == 'movement') ? this.getters['incomes/getIncome']._id : null,\n          name: payload.type\n        },\n        text: payload.txt\n\n      }\n      console.log(comnt);\n\n      return new Promise((resolve, reject) => {\n        axios\n          .post(api + '/comments', comnt)\n          .then(data => {\n            commit('ADD_COMMENT', data.data);\n            resolve(data.data);\n          })\n          .catch(err => {\n            reject(err, err.response);\n          });\n      });\n      console.log(payload);\n    },\n\n  },\n  getters: {\n    getComments: state => state.comments,\n    getComment: state => state.comment,\n  }\n};\n"]}]}