{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/components/Gauth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/components/Gauth.vue","mtime":1551299368532},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport locale from '../languages';\nimport spinner from '../../src/pages/Dashboard/Components/spinner';\nexport default {\n  name: 'Gauth',\n  props: {\n    from: ''\n  },\n  data: function data() {\n    return {\n      /**\n       * The Auth2 parameters, as seen on\n       * https://developers.google.com/identity/sign-in/web/reference#gapiauth2initparams.\n       * As the very least, a valid client_id must present.\n       * @type {Object}\n       */\n      googleSignInParams: {\n        client_id: '911992056725-uno0u77p6vc770gnv30jmr9t7bl6hhk8.apps.googleusercontent.com',\n        scope: 'profile email https://www.googleapis.com/auth/calendar openid'\n      },\n      loading: false\n    };\n  },\n  components: {\n    spinner: spinner\n  },\n  methods: {\n    onSignInSuccess: function onSignInSuccess(googleUser) {\n      var _this = this;\n\n      // `googleUser` is the GoogleUser object that represents the just-signed-in user.\n      // See https://developers.google.com/identity/sign-in/web/reference#users\n      //eslint-disable-next-line\n      var profile = googleUser.getBasicProfile(); // etc etc\n\n      var token = googleUser.getAuthResponse().id_token;\n      var access_token = googleUser.getAuthResponse().access_token; // eslint-disable-next-line\n      // console.log(id_token);\n      // console.log(profile);\n      // console.log(profile.getFamilyName());\n      // console.log(profile.getGivenName());\n      // console.log(profile.getId());\n      // console.log(profile.getImageUrl());\n      // console.log(profile.getName());\n      // console.log(profile.getEmail());\n      // console.log(googleUser.getAuthResponse().access_token);\n\n      var google = {\n        id: profile.getId(),\n        name: profile.getName(),\n        email: profile.getEmail(),\n        accessToken: access_token,\n        imgUrl: profile.getImageUrl()\n      };\n      var router = this.$router;\n\n      if (this.from === 'login') {\n        this.loading = true;\n        this.$store.dispatch('users/google', {\n          token: token,\n          access_token: access_token,\n          google: google\n        }) // eslint-disable-next-line\n        .then(function (data) {\n          _this.loading = false;\n          router.push('/');\n        }).catch(function (err, response) {\n          if (response.status === 404) {\n            _this.$router.push('/register');\n          }\n        });\n      } else if (this.from === 'register') {\n        this.$store.dispatch('users/googleNew', {\n          token: token,\n          googleUser: googleUser\n        }) // eslint-disable-next-line\n        .then(function (data) {\n          router.push('/');\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    },\n    onSignInError: function onSignInError(error) {\n      // `error` contains any error occurred.\n      // eslint-disable-next-line\n      console.log(error);\n      this.$toasted.show(' ' + error.error + ' ', {\n        type: 'danger'\n      });\n    }\n  }\n};",{"version":3,"sources":["Gauth.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,MAAA,MAAA,cAAA;AACA,OAAA,OAAA,MAAA,8CAAA;AACA,eAAA;AACA,QAAA,OADA;AAEA,SAAA;AACA,UAAA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA;;;;;;AAMA,0BAAA;AACA,mBACA,0EAFA;AAGA,eAAA;AAHA,OAPA;AAYA,eAAA;AAZA,KAAA;AAcA,GApBA;AAsBA,cAAA;AACA;AADA,GAtBA;AAyBA,WAAA;AACA,mBADA,2BACA,UADA,EACA;AAAA;;AACA;AACA;AACA;AACA,UAAA,UAAA,WAAA,eAAA,EAAA,CAJA,CAIA;;AACA,UAAA,QAAA,WAAA,eAAA,GAAA,QAAA;AACA,UAAA,eAAA,WAAA,eAAA,GAAA,YAAA,CANA,CAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,UAAA,SAAA;AACA,YAAA,QAAA,KAAA,EADA;AAEA,cAAA,QAAA,OAAA,EAFA;AAGA,eAAA,QAAA,QAAA,EAHA;AAIA,qBAAA,YAJA;AAKA,gBAAA,QAAA,WAAA;AALA,OAAA;AAOA,UAAA,SAAA,KAAA,OAAA;;AACA,UAAA,KAAA,IAAA,KAAA,OAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AAEA,aAAA,MAAA,CACA,QADA,CACA,cADA,EACA;AAAA,sBAAA;AAAA,oCAAA;AAAA;AAAA,SADA,EAEA;AAFA,SAGA,IAHA,CAGA,gBAAA;AACA,gBAAA,OAAA,GAAA,KAAA;AAEA,iBAAA,IAAA,CAAA,GAAA;AACA,SAPA,EAQA,KARA,CAQA,UAAA,GAAA,EAAA,QAAA,EAAA;AACA,cAAA,SAAA,MAAA,KAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,WAAA;AACA;AACA,SAZA;AAaA,OAhBA,MAgBA,IAAA,KAAA,IAAA,KAAA,UAAA,EAAA;AACA,aAAA,MAAA,CACA,QADA,CACA,iBADA,EACA;AAAA,sBAAA;AAAA;AAAA,SADA,EAEA;AAFA,SAGA,IAHA,CAGA,gBAAA;AACA,iBAAA,IAAA,CAAA,GAAA;AACA,SALA,EAMA,KANA,CAMA,eAAA;AACA,kBAAA,GAAA,CAAA,GAAA;AACA,SARA;AASA;AACA,KAxDA;AAyDA,iBAzDA,yBAyDA,KAzDA,EAyDA;AACA;AACA;AACA,cAAA,GAAA,CAAA,KAAA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,EAAA;AAAA,cAAA;AAAA,OAAA;AACA;AA9DA;AAzBA,CAAA","sourcesContent":["<template>\n  <!-- <center> -->\n  <g-signin-button :params=\"googleSignInParams\" @success=\"onSignInSuccess\" @error=\"onSignInError\">\n    <!-- <i class=\"fab fa-google-plus-g\">Login </i> -->\n    <!-- <div class=\"google\"> -->\n    <img src=\"../assets/img/google/btn_google_light_normal_ios.svg\" alt width=\"32px\" height=\"32px\">\n    <!-- <span>{{lg.user.signin +' ' + lg.user.googleLogin}}</span> -->\n    <!-- </div> -->\n    <!-- <strong> {{ from }} {{ lg.user.googleLogin }}</strong> -->\n  </g-signin-button>\n  <!-- </center> -->\n</template>\n \n<script>\nimport locale from '../languages';\nimport spinner from '../../src/pages/Dashboard/Components/spinner';\nexport default {\n  name: 'Gauth',\n  props: {\n    from: ''\n  },\n  data() {\n    return {\n      /**\n       * The Auth2 parameters, as seen on\n       * https://developers.google.com/identity/sign-in/web/reference#gapiauth2initparams.\n       * As the very least, a valid client_id must present.\n       * @type {Object}\n       */\n      googleSignInParams: {\n        client_id:\n          '911992056725-uno0u77p6vc770gnv30jmr9t7bl6hhk8.apps.googleusercontent.com',\n        scope: 'profile email https://www.googleapis.com/auth/calendar openid'\n      },\n      loading: false\n    };\n  },\n\n  components: {\n    spinner\n  },\n  methods: {\n    onSignInSuccess(googleUser) {\n      // `googleUser` is the GoogleUser object that represents the just-signed-in user.\n      // See https://developers.google.com/identity/sign-in/web/reference#users\n      //eslint-disable-next-line\n      const profile = googleUser.getBasicProfile(); // etc etc\n      const token = googleUser.getAuthResponse().id_token;\n      const access_token = googleUser.getAuthResponse().access_token;\n      // eslint-disable-next-line\n      // console.log(id_token);\n      // console.log(profile);\n      // console.log(profile.getFamilyName());\n      // console.log(profile.getGivenName());\n\n      // console.log(profile.getId());\n      // console.log(profile.getImageUrl());\n      // console.log(profile.getName());\n\n      // console.log(profile.getEmail());\n      // console.log(googleUser.getAuthResponse().access_token);\n\n      const google = {\n        id: profile.getId(),\n        name: profile.getName(),\n        email: profile.getEmail(),\n        accessToken: access_token,\n        imgUrl: profile.getImageUrl()\n      };\n      let router = this.$router;\n      if (this.from === 'login') {\n        this.loading = true;\n\n        this.$store\n          .dispatch('users/google', { token, access_token, google })\n          // eslint-disable-next-line\n          .then(data => {\n            this.loading = false;\n\n            router.push('/');\n          })\n          .catch((err, response) => {\n            if (response.status === 404) {\n              this.$router.push('/register');\n            }\n          });\n      } else if (this.from === 'register') {\n        this.$store\n          .dispatch('users/googleNew', { token, googleUser })\n          // eslint-disable-next-line\n          .then(data => {\n            router.push('/');\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n    },\n    onSignInError(error) {\n      // `error` contains any error occurred.\n      // eslint-disable-next-line\n      console.log(error);\n      this.$toasted.show(' ' + error.error + ' ', { type: 'danger' });\n    }\n  }\n};\n</script> \n \n<style scoped>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  /* display: inline-block; */\n  /* padding: 4px 8px; */\n  /* border-radius: 10px; */\n  /* background-color: #3c82f7; */\n  color: #3c82f7;\n  /* box-shadow: 0 3px 0 #0f69ff; */\n  /* margin: auto; */\n  cursor: pointer;\n}\n/* .google { */\n/* border: 1px solid lightblue;\n  border-radius: 5px; */\n/* } */\n.google img {\n  width: 5rem;\n  height: 5rem;\n}\n</style> "],"sourceRoot":"src/components"}]}