{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/components/Badge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/components/Badge.vue","mtime":1547153505001},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nexport default {\n  name: 'badge',\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    type: {\n      type: String,\n      default: 'default',\n      validator: function validator(value) {\n        var acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'rose'];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    }\n  }\n};",{"version":3,"sources":["Badge.vue"],"names":[],"mappings":";;;;;AAMA,eAAA;AACA,QAAA,OADA;AAEA,SAAA;AACA,SAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;AAKA,UAAA;AACA,YAAA,MADA;AAEA,eAAA,SAFA;AAGA,iBAAA,mBAAA,KAAA,EAAA;AACA,YAAA,iBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AACA,eAAA,eAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA;AANA;AALA;AAFA,CAAA","sourcesContent":["<template>\n  <component :is=\"tag\" class=\"badge\" :class=\"`badge-${type}`\">\n    <slot></slot>\n  </component>\n</template>\n<script>\n  export default {\n    name: 'badge',\n    props: {\n      tag: {\n        type: String,\n        default: 'span'\n      },\n      type: {\n        type: String,\n        default: 'default',\n        validator: (value) => {\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'rose'];\n          return acceptedValues.indexOf(value) !== -1\n        }\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}