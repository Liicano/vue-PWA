{"remainingRequest":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js!/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/desarrollo/Escritorio/unabasev4/src/pages/incomes/income.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/desarrollo/Escritorio/unabasev4/src/pages/incomes/income.vue","mtime":1552588325229},{"path":"/home/desarrollo/Escritorio/unabasev4/.babelrc","mtime":1547153504905},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/desarrollo/Escritorio/unabasev4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _JSON$stringify from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _Promise from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/home/desarrollo/Escritorio/unabasev4/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// VUEX\nimport { mapGetters, mapActions, mapState, mapMutations } from 'vuex';\nimport store from '../../store/store.js';\nimport api from '../../lib/api';\nimport commentsModule from './components/income_comments';\nimport newContact from '../Dashboard/Components/new_contact';\nimport { Modal, Tabs } from '@/components';\nimport itemForm from './components/income_form';\nimport itemList from './components/income_list';\nimport isMobile from '../../assets/js/isMobile.js';\nimport autocomplete from '../Dashboard/Components/autocomplete/autocomplete';\nimport totales from '../../pages/Dashboard/Components/mobile_total';\nimport dialogButton from '../Dashboard/Components/dialogButton';\nimport spinner from '../Dashboard/Components/spinner';\nimport { ZoomCenterTransition, SlideYUpTransition } from 'vue2-transitions';\nexport default {\n  data: function data() {\n    return {\n      inMobile: null,\n      loading: false,\n      isSale: true,\n      showDialogContac: false,\n      dialogContactDetail: false,\n      cleanSelected: false,\n      initialPosition: 0,\n      acomplete: {\n        itemType: 'users',\n        initialValue: null,\n        principalAtribute: 'name',\n        secondaryAtribute: 'email',\n        optionalMultipleAtribute: {\n          1: 'business',\n          2: 'legalName'\n        },\n        secondaryQuery: null,\n        placeholder_value: '',\n        searchRoute: '',\n        res_name: 'client',\n        second_level_res: 'data',\n        optionalInputFunction_res: {\n          0: 'contactName'\n        }\n      },\n      initialObject: null,\n      createContactClicked: false,\n      showHandleItems: false,\n      selection: {\n        edit: {\n          price: null,\n          quantity: null\n        },\n        delete: null\n      }\n    };\n  },\n  components: {\n    Modal: Modal,\n    itemForm: itemForm,\n    itemList: itemList,\n    autocomplete: autocomplete,\n    totales: totales,\n    dialogButton: dialogButton,\n    spinner: spinner,\n    Tabs: Tabs,\n    commentsModule: commentsModule,\n    newContact: newContact,\n    ZoomCenterTransition: ZoomCenterTransition,\n    SlideYUpTransition: SlideYUpTransition\n  },\n  methods: _objectSpread({}, mapActions({\n    getCurrentIncome: 'incomes/getIncome',\n    postLine: 'incomes/postLine',\n    postItem: 'items/postItem',\n    putLine: 'incomes/putLine',\n    postIncome: 'incomes/postIncome',\n    putIncome: 'incomes/putIncome',\n    getAllComments: 'comments/getAllComments',\n    postComment: 'comments/postComment',\n    postContact: 'contacts/postContact',\n    shareIncome: 'incomes/shareIncome',\n    findContact: 'contacts/findContact'\n  }), mapMutations({\n    setIncome: 'incomes/SET_INCOME',\n    cleanIncome: 'incomes/CLEAN',\n    cleanItem: 'items/CLEAN',\n    setItem: 'items/SET_ITEM',\n    hideShowBottom: 'HIDE_SHOW_BOTTOM',\n    editorState: 'HANDLE_EDIT',\n    changeDialogMessage: 'HANDLE_MSG_DIALOG',\n    setContact: 'contacts/SET_CONTACT',\n    cleanContact: 'contacts/CLEAN',\n    handleOptionalEmail: 'HANDLE_OPTIONAL_EMAIL',\n    setOptionalContact: 'incomes/SET_OPTIONAL_CONTACT',\n    setComment: 'comments/SET_COMMENT',\n    showDetails: 'HANDLE_DETAILS',\n    editSelection: 'items/EDIT_SELECTION',\n    cleanSelection: 'items/CLEAN_SELECTION',\n    setGlobalsCreate: 'items/SET_GLOBALS_CREATE',\n    handleItemDialog: 'HANDLE_ITEM_DIALOG',\n    showBottomTotals: 'HIDE_SHOW_TOTALS',\n    handleSelections: 'items/HANDLE_SELECTIONS'\n  }), {\n    // HANDLE BOTTOM BAR AND INPUT (store)\n    displayDialog: function displayDialog(dialog, bottomBar, inputs, clean) {\n      if (this.inMobile) {\n        this.cleanItem();\n        this.handleItemDialog(dialog);\n        this.hideShowBottom(bottomBar);\n      }\n    },\n    handleDetails: function handleDetails() {\n      this.$route.params.id ? this.showDetails(false) : this.showDetails(true);\n    },\n    displayDialogContact: function displayDialogContact(dialog, bottomBar, inputs, clean) {\n      if (bottomBar == undefined) {\n        dialog = true;\n        bottomBar = false;\n      }\n\n      this.showDialogContac = dialog;\n      this.hideShowBottom(bottomBar);\n    },\n    createContact: function createContact(name) {\n      // this.createContactClicked = true;\n      this.setContact({\n        attr: 'name',\n        value: name\n      });\n      this.displayDialogContact(true, false);\n    },\n    displayDialogMsg: function displayDialogMsg(dialog, bottomBar, inputs, clean) {\n      // if (this.inMobile) {\n      this.changeDialogMessage(dialog);\n      this.hideShowBottom(bottomBar);\n      this.showDetails(inputs); // }\n    },\n    showContactDetail: function showContactDetail() {\n      this.dialogContactDetail = !this.dialogContactDetail;\n    },\n    //  HANDLE LINE\n    handleLine: function handleLine() {\n      var _this = this;\n\n      this.saveIncome().then(function (res) {\n        console.log('entro AQUIIIIIIIIIIII!!!! handleLine');\n\n        _this.setItem({\n          attr: 'movement',\n          value: res._id\n        });\n\n        console.log('termino el saveIncome -> ', res);\n\n        if (_this.isMobile) {\n          _this.addLine().then(function (res) {\n            console.log('termino el add line dentro de handle line -> ', res);\n\n            _this.cleanItem();\n          });\n        } else {\n          _this.addLine();\n\n          _this.cleanItem();\n        }\n      });\n    },\n    addLine: function addLine() {\n      var _this2 = this;\n\n      if (this.getSelectedItemsAdd.length > 0) {\n        this.handleDetails();\n        this.getSelectedItemsAdd.forEach(function (e) {\n          var item = {\n            item: _this2.getUserLastItems[e]._id,\n            name: _this2.getUserLastItems[e].name,\n            movement: _this2.getIncome._id,\n            price: _this2.getUserLastItems[e].lastPrice != undefined ? _this2.getUserLastItems[e].lastPrice : 0,\n            quantity: 1,\n            movementType: _this2.CR_HANDLER.type,\n            currency: _this2.getIncome.currency\n          };\n\n          _this2.postLine(item).then(function (res) {\n            if (_this2.inMobile) {\n              _this2.displayDialog(false, false, false, true);\n            }\n          });\n        });\n        this.cleanSelection('selectedItemsAdd');\n        this.setGlobalsCreate(null);\n      } else {\n        return new _Promise(function (resolve, reject) {\n          if (_this2.getItem.name) {\n            if (!_this2.getItem._id || _this2.getItem.justCreated) {\n              if (!_this2.getItem.item || _this2.getItem.item == '') {\n                var obj = {\n                  name: _this2.getItem.name\n                };\n\n                _this2.postItem(obj).then(function (res) {\n                  _this2.setItem({\n                    attr: 'movementType',\n                    value: _this2.CR_HANDLER.type\n                  });\n\n                  _this2.postLine(_this2.getItem).then(function (res) {\n                    if (_this2.inMobile) {\n                      _this2.displayDialog(false, false, false, true);\n\n                      resolve(res);\n                    } else {\n                      // this.cleanItem();\n                      resolve(res);\n                    }\n                  });\n                });\n              } else {\n                _this2.handleDetails();\n\n                _this2.cleanSelection('selectedItemsAdd');\n\n                _this2.postLine(_this2.getItem).then(function (res) {\n                  if (_this2.inMobile) {\n                    _this2.displayDialog(false, false, false, true);\n\n                    resolve(res);\n                  } else {\n                    // this.cleanItem();\n                    resolve(res);\n                  }\n                });\n              }\n            } else {\n              console.log('Actualizo la linea');\n\n              _this2.handleDetails();\n\n              _this2.putLine(_this2.getItem).then(function (res) {\n                // this.cleanItem();\n                if (_this2.inMobile) {\n                  _this2.displayDialog(false, false, false, true);\n\n                  resolve(res);\n                } else {\n                  // this.cleanItem();\n                  resolve(res);\n                }\n              });\n            }\n          } else {\n            _this2.$toasted.show('Seleccione un item', {\n              type: 'danger'\n            });\n          }\n        });\n      }\n    },\n    // UPDATE MOVEMENT (state)\n    updateIncome: function updateIncome(event) {\n      if (event.name == 'client') {\n        this.setClientType(event);\n        this.setMovementResponsable(this.CR_HANDLER);\n        event.value.user && event.value.user != null ? event.value = event.value.user : event.value.business && event.value.business != null ? event.value = event.value.business : event.value;\n      }\n\n      var obj = {\n        attr: event.name,\n        value: event.value,\n        second_level: event.second_level_res ? event.second_level_res : null\n      };\n      this.setIncome(obj);\n    },\n    setClientType: function setClientType(client) {\n      var setted_type = {\n        attr: 'client',\n        value: client.value.user && client.value.user != null ? 'User' : 'Contact',\n        second_level: 'type'\n      };\n      this.setIncome(setted_type);\n    },\n    setMovementResponsable: function setMovementResponsable(cr_handler) {\n      var _this3 = this;\n\n      var responsable_data = [{\n        attr: 'responsable',\n        second_level: 'type',\n        value: 'User'\n      }, {\n        attr: 'responsable',\n        second_level: 'data',\n        value: this.getUser\n      }];\n      responsable_data.forEach(function (e) {\n        _this3.setIncome(e);\n      });\n    },\n    handleSaveIncome: function handleSaveIncome() {\n      var _this4 = this;\n\n      this.blurAction(this.getIncome.contactName).then(function (res) {\n        _this4.saveIncome();\n      });\n    },\n    // HANDLE MOVEMENT\n    saveIncome: function saveIncome() {\n      var _this5 = this;\n\n      return new _Promise(function (resolve, reject) {\n        if (_this5.errors.items.length > 0 || _this5.getIncome.name == null) {\n          _this5.$toasted.show('Uno o mas campos erroneos en la venta!', {\n            type: 'danger'\n          });\n        } else {\n          if (_this5.getIncome._id) {\n            _this5.putIncome(_this5.getIncome).then(function (res) {\n              _this5.cleanContact();\n\n              resolve(res);\n              console.log('ACTUALIZADO!');\n            });\n          } else {\n            if (_this5.getIncome.responsable.data == null) _this5.setMovementResponsable(_this5.CR_HANDLER);\n\n            _this5.postIncome(_this5.INCOME).then(function (res) {\n              _this5.cleanContact();\n\n              var movementType = _this5.$route.name == 'Income' ? 'income' : 'outcome';\n\n              _this5.$router.replace('/' + movementType + '/' + res._id);\n\n              resolve(res);\n              console.log('GUARDADO!');\n            });\n          }\n        }\n      });\n    },\n    newComment: function newComment() {\n      var _this6 = this;\n\n      var params = {\n        parent: this.getIncome._id,\n        type: 'movement',\n        txt: this.getComment\n      };\n      this.postComment(params).then(function (res) {\n        _this6.setComment('');\n      });\n    },\n    newContact: function newContact() {\n      var _this7 = this;\n\n      if (this.validateEmail(this.getContact.email)) {\n        this.findContact(this.getContact.email).then(function (res) {\n          _this7.postContact(_this7.CONTACT).then(function (res) {\n            _this7.displayDialogContact(false, false, false, true);\n\n            _this7.setMovementResponsable(_this7.CR_HANDLER);\n\n            var foo = [{\n              attr: 'client',\n              value: res.user != null ? res = res.user : res,\n              second_level: 'data'\n            }, {\n              attr: 'client',\n              value: res.imgUrl ? 'User' : 'Contact',\n              second_level: 'type'\n            }];\n            foo.forEach(function (e) {\n              _this7.setIncome(e);\n            });\n          });\n        });\n      } else {\n        this.$toasted.show('Email invalido!', {\n          type: 'danger'\n        });\n      }\n    },\n    handleOptionalEmailModal: function handleOptionalEmailModal(payload) {\n      this.handleOptionalEmail(payload);\n    },\n    setOpcionalUser: function setOpcionalUser(event) {\n      this.OPTIONAL_USER.email = event.value;\n    },\n    handleInputDisplay: function handleInputDisplay(show, isClick) {\n      if (this.getIncome._id) {\n        if (this.getIncome.editor == this.getUser._id) {\n          this.editorState(true);\n        } else {\n          this.editorState(false);\n        }\n      } else {\n        this.editorState(true);\n        this.handleSeeDetails();\n      }\n    },\n    handleSeeDetails: function handleSeeDetails() {\n      if (this.getEnableEdit) {\n        this.showDetails(true);\n      }\n    },\n    saveOptionalUser: function saveOptionalUser() {\n      var _this8 = this;\n\n      this.setOptionalContact(this.OPTIONAL_USER);\n\n      if (this.OPTIONAL_USER.email) {\n        console.log('PAYLOAD ANTES DEL  SHARE_INCOME -> ', this.getIncome);\n        this.shareIncome(this.getIncome).then(function () {\n          _this8.handleOptionalEmailModal(false);\n\n          _this8.$toasted.show('Cotizacion enviada!');\n        });\n      } else {\n        this.$toasted.show('Ingresa un correo!', {\n          type: 'info'\n        });\n      }\n    },\n    getUserImg: function getUserImg() {\n      if (this.CR_HANDLER.type == 'income') {\n        if (this.INCOME.client.data) {\n          if (this.INCOME.client.data.imgUrl) {\n            return this.INCOME.client.data.imgUrl;\n          } else {\n            return require('../../../public/img/default-avatar.png');\n          }\n        } else {\n          return require('../../../public/img/default-avatar.png');\n        }\n      } else {\n        if (this.getIncome._id) {\n          if (this.INCOME.client.data) {\n            if (this.INCOME.client.data.imgUrl) {\n              return this.INCOME.client.data.imgUrl;\n            } else {\n              return require('../../../public/img/default-avatar.png');\n            }\n          } else {\n            return require('../../../public/img/default-avatar.png');\n          }\n        } else {\n          if (this.INCOME.responsable.type == 'User') {\n            console.log('Entro en el segundo con user');\n\n            if (this.INCOME.responsable.data.imgUrl) {\n              return this.INCOME.responsable.data.imgUrl;\n            } else {\n              return require('../../assets/img/company_icon.png');\n            }\n          } else {\n            console.log('Entro en el segundo sin user');\n            return require('../../../public/img/default-avatar.png');\n          }\n        }\n      }\n    },\n    getUserName: function getUserName() {\n      switch (this.CR_HANDLER.type) {\n        case 'income':\n          if (!this.INCOME[this.CR_HANDLER.receptor].type || this.INCOME[this.CR_HANDLER.receptor].type == null) {\n            return this.INCOME[this.CR_HANDLER.receptor].name;\n          } else {\n            return this.INCOME[this.CR_HANDLER.receptor].data.name;\n          }\n\n          break;\n\n        case 'outcome':\n          if (!this.INCOME[this.CR_HANDLER.emisor].type || this.INCOME[this.CR_HANDLER.emisor].type == null) {\n            return this.INCOME[this.CR_HANDLER.emisor].name;\n          } else {\n            if (this.getIncome._id) {\n              return this.INCOME[this.CR_HANDLER.emisor].data.name;\n            } else {\n              return this.INCOME[this.CR_HANDLER.receptor].data.name;\n            }\n          }\n\n          break;\n      }\n    },\n    setInitial: function setInitial(payload) {\n      this.initialObject = payload;\n    },\n    compareOnExit: function compareOnExit(payload) {\n      if (_JSON$stringify(this.initialObject) === _JSON$stringify(this.INCOME)) {\n        console.log('');\n      } else {\n        if (this.getIncome._id) {\n          this.saveIncome();\n        }\n      }\n    },\n    validateEmail: function validateEmail(email) {\n      var re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    },\n    blurAction: function blurAction(query, click) {\n      var _this9 = this;\n\n      console.log('sfds');\n      return new _Promise(function (resolve, reject) {\n        console.log('blurEvent', query);\n\n        _this9.findContact(_this9.getIncome.contactName).then(function (res) {\n          if (res) {\n            console.log(res);\n            resolve(true);\n          } else {\n            if (_this9.validateEmail(query)) {\n              var contactName = query.split('@');\n\n              _this9.setContact({\n                attr: 'name',\n                value: contactName[0]\n              });\n\n              _this9.setContact({\n                attr: 'email',\n                value: query\n              });\n\n              _this9.postContact(_this9.CONTACT).then(function (res) {\n                _this9.displayDialogContact(false, false, false, true);\n\n                _this9.setMovementResponsable(_this9.CR_HANDLER);\n\n                var foo = [{\n                  attr: 'client',\n                  value: res.user != null ? res = res.user : res,\n                  second_level: 'data'\n                }, {\n                  attr: 'client',\n                  value: res.imgUrl ? 'User' : 'Contact',\n                  second_level: 'type'\n                }];\n                foo.forEach(function (e) {\n                  _this9.setIncome(e);\n                });\n                resolve(true);\n              });\n            } else {\n              resolve(true);\n            }\n          }\n        });\n      });\n    },\n    handleScroll: function handleScroll(event) {\n      if (event.target.scrollTop > this.initialPosition) {\n        this.showBottomTotals(false);\n      } else if (event.target.scrollTop < this.initialPosition) {\n        this.showBottomTotals(true);\n      }\n\n      this.initialPosition = event.target.scrollTop;\n    }\n  }),\n  created: function created() {\n    var _this10 = this;\n\n    this.inMobile = isMobile; // AUTOCOMPLETE CONFIG\n\n    this.acomplete.searchRoute = api + '/contacts/find/self/'; // GENERAL CONFIG (ID OR NOT ID)\n\n    if (this.$route.params.id) {\n      this.loading = true;\n      this.getCurrentIncome(this.$route.params.id).then(function (res) {\n        _this10.showDetails(false);\n\n        _this10.handleInputDisplay();\n\n        _this10.loading = false;\n\n        _this10.setInitial(_this10.INCOME);\n      });\n    } else {\n      this.cleanIncome();\n      this.cleanItem();\n      this.showDetails(true);\n    }\n\n    if (this.$route.name == 'Outcome') {\n      this.hideShowBottom(false);\n    }\n\n    !this.isSale ? this.acomplete.placeholder_value = 'Proveedor' : this.acomplete.placeholder_value = 'Cliente';\n  },\n  mounted: function mounted() {\n    this.acomplete.initialValue = this.INCOME_CLIENT;\n  },\n  computed: _objectSpread({}, mapState({\n    showTotals: function showTotals(state) {\n      return state.showTotals;\n    },\n    showDialogMessage: function showDialogMessage(state) {\n      return state.showDialogMessage;\n    },\n    optionalEmail: function optionalEmail(state) {\n      return state.optionalEmail;\n    }\n  }), mapGetters({\n    getIncome: 'incomes/getIncome',\n    getItem: 'items/getItem',\n    getContact: 'contacts/getContact',\n    getComment: 'comments/getComment',\n    getUser: 'users/user',\n    getEnableEdit: 'getEnableEdit',\n    getSeeDetails: 'getSeeDetails',\n    getSelectedItems: 'items/getSelectedItems',\n    getSelectedItemsAdd: 'items/getSelectedItemsAdd',\n    getUserLastItems: 'items/getUserLastItems',\n    getGlobalItemVars: 'items/getGlobalItemVars',\n    getShowDialogIncome: 'getShowDialogIncome',\n    getShowTotals: 'getShowTotals',\n    getCurrencyConfig: 'getCurrencyConfig'\n  }), {\n    CR_HANDLER: function CR_HANDLER() {\n      switch (this.$route.name) {\n        case 'Income':\n          return {\n            emisor: 'responsable',\n            receptor: 'client',\n            type: 'income'\n          };\n          break;\n\n        case 'Outcome':\n          return {\n            emisor: 'client',\n            receptor: 'responsable',\n            type: 'outcome'\n          };\n          break;\n\n        default:\n      }\n    },\n    INCOME_CLIENT: function INCOME_CLIENT() {\n      if (this.getIncome[this.CR_HANDLER.receptor].type && this.getIncome[this.CR_HANDLER.receptor].type != null) {\n        return this.getIncome[this.CR_HANDLER.receptor].data;\n      } else {\n        if (this.getIncome._id) {\n          return this.getIncome[this.CR_HANDLER.receptor].name;\n        } else {\n          return this.getIncome.contactName;\n        }\n      }\n    },\n    INCOME_RESPONSABLE: function INCOME_RESPONSABLE() {\n      if (this.getIncome[this.CR_HANDLER.emisor].type && this.getIncome[this.CR_HANDLER.emisor].type != null) {\n        return this.getIncome[this.CR_HANDLER.emisor].data;\n      } else {\n        if (this.$route.params.id) {\n          return this.getIncome[this.CR_HANDLER.emisor].name;\n        } else {\n          return this.getIncome.contactName;\n        }\n      }\n    },\n    INCOME: function INCOME() {\n      return {\n        _id: this.getIncome._id,\n        name: this.getIncome.name,\n        description: this.getIncome.description,\n        dates: {\n          expiration: null\n        },\n        creator: this.getIncome.creator,\n        contactName: this.getIncome.client.name ? this.getIncome.client.name : null,\n        client: this.getIncome[this.CR_HANDLER.receptor].type && this.getIncome[this.CR_HANDLER.receptor].type != null ? {\n          type: this.getIncome[this.CR_HANDLER.receptor].type,\n          data: this.INCOME_CLIENT\n        } : {\n          name: this.INCOME_CLIENT\n        },\n        responsable: this.getIncome[this.CR_HANDLER.emisor].type && this.getIncome[this.CR_HANDLER.emisor].type != null ? {\n          type: this.getIncome[this.CR_HANDLER.emisor].type,\n          data: this.INCOME_RESPONSABLE\n        } : {\n          name: this.INCOME_RESPONSABLE\n        },\n        // ONLY FOR POST REQUEST, IN GET REQUEST IM USING GETTER (this.getIncome)\n        editor: this.CR_HANDLER.type == 'income' ? this.INCOME_RESPONSABLE : this.INCOME_CLIENT,\n        lines: [],\n        total: {\n          net: 0,\n          tax: 0\n        },\n        state: 'draft',\n        isActive: true,\n        currency: null\n      };\n    },\n    OPTIONAL_USER: function OPTIONAL_USER() {\n      return {\n        name: this.CR_HANDLER.type == 'income' ? this.getIncome.client.name : this.getIncome.responsable.name,\n        email: null\n      };\n    },\n    CONTACT: function CONTACT() {\n      return {\n        creator: this.getContact.creator,\n        email: this.getContact.email,\n        isActive: true,\n        name: this.getContact.name,\n        phone: this.getContact.phone,\n        user: this.getContact.user\n      };\n    },\n    TOTAL: function TOTAL() {\n      var total = _.sumBy(this.getIncome.lines, function (line) {\n        return line.price * line.quantity;\n      });\n\n      return {\n        net: total,\n        tax: total * 0.19,\n        total: total * 0.19 + total\n      };\n    }\n  }),\n  watch: {\n    INCOME_CLIENT: function INCOME_CLIENT(val) {\n      console.log('this.INCOME_CLIENT -> ', this.INCOME_CLIENT);\n      console.log('this.INCOME_RESPONSABLE -> ', this.INCOME_RESPONSABLE);\n\n      if (val) {\n        if (!val.name) {\n          this.acomplete.initialValue = val;\n        } else {\n          this.acomplete.initialValue = val.name;\n        }\n      }\n    }\n  },\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    store.commit('HIDE_SHOW_TOTALS', true);\n    store.commit('HIDE_SHOW_NAVBAR', false);\n    next();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    store.commit('HIDE_SHOW_TOTALS', false);\n    store.commit('HIDE_SHOW_NAVBAR', true);\n    this.compareOnExit();\n    next();\n  }\n};",{"version":3,"sources":["income.vue"],"names":[],"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","sourcesContent":["<template>\n  <div>\n    <!-- ============================= -->\n    <!-- DIALOGS -->\n    <!-- ============================= -->\n    <md-dialog :md-active.sync=\"getShowDialogIncome\" v-if=\"inMobile\">\n      <!-- <md-dialog-title>\n        <div class=\"row\">\n          <div class=\"col s4\">\n         \n          </div>\n\n          <div class=\"col s4\"></div>\n\n          <div class=\"col s4\">\n            <span class=\"right\" @click=\"displayDialog(false, false, false, true)\">\n              <md-icon>close</md-icon>\n            </span>\n          </div>\n        </div>\n      </md-dialog-title>-->\n      <md-content>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-45 md-small-size-100\" style=\"padding: 0\">\n            <item-form :item=\"getItem\" v-if=\"(inMobile) && (getShowDialogIncome)\"></item-form>\n          </div>\n        </div>\n      </md-content>\n      <md-dialog-actions>\n        <dialog-button\n          @clickFunction=\"addLine()\"\n          :colorClass=\"'md-success'\"\n          :buttonName=\"'AGREGAR'\"\n          style=\"z-index: 1000;\"\n        ></dialog-button>\n      </md-dialog-actions>\n      <br>\n    </md-dialog>\n\n    <modal v-if=\"dialogContactDetail\" @close=\"showContactDetail\">\n      <template slot=\"header\">\n        <md-button\n          class=\"md-simple md-just-icon md-round modal-default-button\"\n          @click=\"showContactDetail\"\n        >\n          <md-icon>clear</md-icon>\n        </md-button>\n      </template>\n\n      <template slot=\"body\">\n        <center v-if=\"(INCOME.client.data || INCOME.client.data != null)\">\n          <div\n            class=\"md-layout-item md-size-10 md-small-size-20 valign-wrapper\"\n            v-if=\"(INCOME.client.type && INCOME.client.type == 'User')\"\n          >\n            <md-avatar v-if=\"INCOME.client.data.imgUrl\">\n              <img @click=\"showContactDetail\" :src=\"getUserImg()\" alt=\"Avatar\">\n            </md-avatar>\n\n            <md-avatar v-else>\n              <img @click=\"showContactDetail\" src=\"../../assets/img/company_icon.png\" alt=\"Avatar\">\n            </md-avatar>\n          </div>\n\n          <div v-else class=\"md-layout-item md-size-10 md-small-size-20 valign-wrapper\">\n            <md-avatar>\n              <img\n                @click=\"showContactDetail\"\n                src=\"../../../public/img/default-avatar.png\"\n                alt=\"Avatar\"\n              >\n            </md-avatar>\n          </div>\n\n          <b>{{getUserName()}}</b>\n\n          <!-- <p>{{(CR_HANDLER == 'income')? INCOME_CLIENT.email : INCOME_RESPONSABLE.email}}</p> -->\n        </center>\n\n        <center v-if=\"(!INCOME.client.data || INCOME.client.data == null)\">\n          <h6>\" {{(INCOME.contactName && INCOME.contactName != null)?INCOME.contactName:INCOME.client.name}} \" no existe</h6>\n          <md-button class=\"md-success md-raised\">Añadir a contactos</md-button>\n        </center>\n      </template>\n\n      <template slot=\"footer\">\n        <md-button v-if=\"INCOME.client.type\" class=\"md-info md-simple\">Ver contacto</md-button>\n      </template>\n    </modal>\n\n    <md-dialog :md-active.sync=\"showDialogMessage\">\n      <md-content>\n        <md-dialog-title>\n          <div class=\"row\">\n            <div class=\"col s4\">\n              <span class=\"left\"></span>\n            </div>\n\n            <div class=\"col s4\"></div>\n\n            <div class=\"col s4\">\n              <span class=\"right\" @click=\"displayDialogMsg(false, false, false, true);\">\n                <md-icon>close</md-icon>\n              </span>\n            </div>\n          </div>\n        </md-dialog-title>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-100 md-small-size-100\" style=\"padding: 0\">\n            <commentsModule :movement=\"INCOME\"></commentsModule>\n          </div>\n        </div>\n        <md-dialog-actions>\n          <dialog-button\n            @clickFunction=\"newComment\"\n            :colorClass=\"'md-success'\"\n            :buttonName=\"'Enviar comentario'\"\n            style=\"z-index: 100;\"\n          ></dialog-button>\n        </md-dialog-actions>\n      </md-content>\n    </md-dialog>\n\n    <md-dialog :md-active.sync=\"showDialogContac\">\n      <md-dialog-title>\n        <div class=\"row\">\n          <div class=\"col s4\"></div>\n\n          <div class=\"col s4\"></div>\n\n          <div class=\"col s4\">\n            <span class=\"right\" @click=\"displayDialogContact(false, false, false, true)\">\n              <md-icon>close</md-icon>\n            </span>\n          </div>\n        </div>\n      </md-dialog-title>\n      <md-content>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-100 md-small-size-100\" style=\"padding: 0\">\n            <new-contact></new-contact>\n          </div>\n        </div>\n      </md-content>\n      <md-dialog-actions>\n        <dialog-button\n          @clickFunction=\"newContact\"\n          :colorClass=\"'md-success'\"\n          :buttonName=\"'Crear contacto'\"\n          style=\"z-index: 100;\"\n        ></dialog-button>\n      </md-dialog-actions>\n      <br>\n    </md-dialog>\n\n    <modal v-if=\"optionalEmail\" @close=\"handleOptionalEmailModal(false)\">\n      <template slot=\"header\">\n        <md-button\n          class=\"md-simple md-just-icon md-round modal-default-button\"\n          @click=\"handleOptionalEmailModal(false)\"\n        >\n          <md-icon>clear</md-icon>\n        </md-button>\n      </template>\n\n      <template slot=\"body\">\n        <div class=\"container-fluid\">\n          <center>\n            <small>Ingresa el correo de \"{{this.getIncome.client.name.toUpperCase()}}\"</small>\n\n            <md-field>\n              <md-input\n                @input.native=\"setOpcionalUser($event.target)\"\n                :placeholder=\"'email@gmail.com'\"\n              ></md-input>\n            </md-field>\n          </center>\n        </div>\n      </template>\n\n      <template slot=\"footer\">\n        <center>\n          <md-button type=\"email\" class=\"md-success md-dense\" @click=\"saveOptionalUser()\">Enviar</md-button>\n        </center>\n      </template>\n    </modal>\n\n    <!-- ============================= -->\n    <!-- / DIALOGS -->\n    <!-- ============================= -->\n    <div v-if=\"loading\">\n      <spinner></spinner>\n    </div>\n\n    <div v-else>\n      <md-card class style=\"margin:0 !important; border-bottom: none; box-shadow: none;\">\n        <md-card-header class=\"md-small-hide\"></md-card-header>\n        <!-- <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-90\"></div>\n          <div class=\"md-layout-item md-size-10\">\n            <center></center>\n          </div>\n        </div>-->\n        <md-card-content style=\"padding: 0;\">\n          <slide-y-up-transition>\n            <div class=\"md-layout valign-wrapper\" v-if=\"getSeeDetails\">\n              <div class=\"md-layout-item md-size-50 md-small-size-100\" id=\"textField\" style>\n                <br>\n\n                <v-text-field\n                  outline\n                  id=\"noMaterialize\"\n                  name=\"name\"\n                  autofocus\n                  color=\"green\"\n                  background-color=\"grey lighten-2\"\n                  label=\"Referencia\"\n                  prepend-inner-icon=\"note_add\"\n                  :value=\"getIncome.name\"\n                  @input.native=\"updateIncome($event.target)\"\n                ></v-text-field>\n              </div>\n\n              <div\n                :class=\"['md-layout-item md-size-50 md-small-size-100', (inMobile)? 'containerMobile': 'containerDesktop']\"\n                style=\"padding: 0;\"\n              >\n                <div class=\"md-layout md-alignment-center-center\">\n                  <div class=\"md-layout-item md-size-80\" id=\"textField\">\n                    <md-field>\n                      <autocomplete\n                        style=\"width: 100%; margin-top:6%;\"\n                        v-validate=\"'required'\"\n                        @clickOnItem=\"updateIncome\"\n                        @clickOnCreate=\"createContact\"\n                        :config=\"acomplete\"\n                        @optionalInputFunction=\"updateIncome\"\n                        @blurEvent=\"blurAction\"\n                      ></autocomplete>\n                    </md-field>\n                  </div>\n                  <div class=\"md-layout-item md-size-20\">\n                    <center>\n                      <!-- ==============================\n              IMAGEN DEL USUARIO\n                      ==============================-->\n                      <center v-if=\"INCOME.client.type == 'User'\">\n                        <v-avatar\n                          v-if=\"INCOME.client.data.imgUrl\"\n                          :tile=\"false\"\n                          :size=\"(inMobile)? 50 : 60\"\n                        >\n                          <img @click=\"showContactDetail\" :src=\"getUserImg()\" alt=\"Avatar\">\n                        </v-avatar>\n\n                        <md-avatar v-else>\n                          <img\n                            @click=\"showContactDetail\"\n                            src=\"../../assets/img/company_icon.png\"\n                            alt=\"Avatar\"\n                          >\n                        </md-avatar>\n                      </center>\n\n                      <center v-else>\n                        <v-avatar :tile=\"false\" :size=\"(inMobile)? 50 : 60\">\n                          <img\n                            @click=\"showContactDetail\"\n                            src=\"../../../public/img/default-avatar.png\"\n                            alt=\"avatar\"\n                          >\n                        </v-avatar>\n                      </center>\n\n                      <!-- ==============================\n            //   IMAGEN DEL USUARIO\n                      ==============================-->\n                    </center>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </slide-y-up-transition>\n          <!-- ==============================\n              NOMBRE DEL USUARIO\n          ==============================-->\n          <div v-if=\"!getSeeDetails\" @click=\"handleSeeDetails()\">\n            <center>\n              <md-content class=\"md-elevation-3\" v-if=\"inMobile\">\n                <div v-if=\"INCOME.client\">\n                  <!-- <h5>\n                    <span>\n                      <small>{{getUserName()}}</small>\n                    </span>\n                    <br>\n                    <span>{{INCOME.name}}</span>\n                  </h5>-->\n                  <v-card class=\"mx-auto\" color=\"white\" dark max-width=\"400\">\n                    <v-card-actions>\n                      <v-list-tile class=\"grow\">\n                        <v-list-tile-avatar color=\"grey darken-3\" v-if=\"INCOME.client.imgUrl\">\n                          <v-img class=\"elevation-6\" :src=\"getUserImg()\"></v-img>\n                        </v-list-tile-avatar>\n                        <v-list-tile-avatar color=\"grey darken-3\" v-else>\n                          <v-img class=\"elevation-6\" :src=\"getUserImg()\"></v-img>\n                        </v-list-tile-avatar>\n\n                        <v-list-tile-content class=\"userIncomeClass\">\n                          <div class=\"container-fluid\">\n                            <div class=\"md-layout\">\n                              <div\n                                class=\"md-layout-item md-size-100\"\n                                style=\"heigth: 0px !important; color: black;\"\n                              >\n                                <p style=\"margin-bottom: 0;\">\n                                  <b>{{INCOME.name}}</b>\n                                </p>\n                                <small class=\"md-caption\">{{getUserName()}}</small>\n                              </div>\n                            </div>\n                          </div>\n                        </v-list-tile-content>\n                      </v-list-tile>\n                    </v-card-actions>\n                  </v-card>\n                </div>\n                <div v-else>\n                  <h5>¡Le faltan datos a la venta!\n                    <br>\n                    <span style=\"color:blue;\">Click aqui!</span>\n                  </h5>\n                </div>\n              </md-content>\n              <div v-else>\n                <div class=\"md-layout\">\n                  <div class=\"md-layout-item md-size-15\">\n                    <div class=\"file-input img-circle\" style=\"margin-left: -0%;\">\n                      <div class=\"image-container\">\n                        <img :src=\"getUserImg()\" class=\"valign-wrapper\">\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"md-layout-item md-size-70\" style=\"margin-top: -2%;\">\n                    <div class=\"md-layout\">\n                      <div class=\"md-layout-item md-size-100\">\n                        <h3 class=\"pull-left\" style=\"margin-bottom: -15px;\">\n                          <b>{{INCOME.name | uppercase}}</b>\n                        </h3>\n                      </div>\n                    </div>\n\n                    <div class=\"md-layout\">\n                      <div class=\"md-layout-item md-size-100\">\n                        <h4 class=\"pull-left\">{{getUserName()}}</h4>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"md-layout-item md-size-15\">\n                    <center>\n                      <!-- <md-button class=\"md-just-icon md-simple md-info\">\n                        <md-icon>message</md-icon>\n                      </md-button>-->\n                      <md-button class=\"md-just-icon blue darken-3 md-round md-dense\">\n                        <md-icon>timeline</md-icon>\n                      </md-button>\n                      <!-- <md-button class=\"md-just-icon md-simple md-danger\">\n                        <md-icon>delete</md-icon>\n                      </md-button>-->\n                    </center>\n                  </div>\n                </div>\n              </div>\n            </center>\n          </div>\n\n          <!-- ==============================\n            //  NOMBRE DEL USUARIO\n          ==============================-->\n          <!-- ==============================\n              SECCION DE AGREGAR ITEM (INTERMEDIA) (MOBILE)\n          ==============================-->\n          <!-- <br class=\"md-big-hide\" v-if=\"inMobile\"> -->\n          <div class=\"md-layout\" v-if=\"inMobile\">\n            <div class=\"md-layout-item md-size-100\" style=\"padding:0\">\n              <!-- <md-button\n                  class=\"md-success md-raised md-round\"\n                  @click=\"displayDialog(true, false, true, false); handleSaveIncome();\"\n              >Agregar item</md-button>-->\n              <v-btn\n                @click=\"displayDialog(true, false, true, false); handleSaveIncome();\"\n                block\n                color=\"green\"\n                dark\n                style=\"margin: 0 !important\"\n              >Nueva linea +</v-btn>\n            </div>\n          </div>\n          <!-- <zoom-center-transition :duration=\"500\"> -->\n          <!-- <div class=\"md-layout\" v-if=\"inMobile && getSelectedItems.length > 0\">\n              <div class=\"md-layout-item md-size-100\">\n                <v-subheader\n                  class=\"text-success\"\n                  \n                >{{getSelectedItems.length}} Seleccionados</v-subheader>\n\n                <v-divider></v-divider>\n              </div>\n          </div>-->\n          <!-- <div class=\"md-layout\">\n              <div class=\"md-layout-item md-size-80\">\n                <v-subheader\n                  @click=\"showHandleItems = !showHandleItems\"\n                  class=\"text-success\"\n                  v-if=\"inMobile && getSelectedItems.length > 0\"\n                >{{getSelectedItems.length}} items seleccionados</v-subheader>\n              </div>\n              <div class=\"md-layout-item md-size-20\">\n                <v-btn flat icon color=\"green\" v-if=\"inMobile && getSelectedItems.length > 0\">\n                  <v-icon>style</v-icon>\n                </v-btn>\n              </div>\n          </div>-->\n          <!-- </zoom-center-transition> -->\n          <!-- <v-divider v-if=\"inMobile && getSelectedItems.length > 0\"></v-divider>\n          <v-spacer v-if=\"inMobile && getSelectedItems.length > 0\"></v-spacer>-->\n          <!-- ==============================\n            //  SECCION DE AGREGAR ITEM (INTERMEDIA) (MOBILE)\n          ==============================-->\n          <!-- <md-divider></md-divider> -->\n          <!-- ==============================\n              LISTA DE ITEMS Y TOTALES (MOBILE)\n          ==============================-->\n          <div class=\"md-layout md-big-hide\" style=\"height: 80vh;\">\n            <div class=\"md-small-size-100 md-size-100\">\n              <md-content @scroll.native=\"handleScroll($event)\">\n                <item-list :items=\"null\" class=\"md-big-hide\"></item-list>\n              </md-content>\n            </div>\n\n            <totales></totales>\n          </div>\n\n          <!-- ==============================\n            //  LISTA DE ITEMS Y TOTALES (MOBILE)\n          ==============================-->\n          <!-- ==============================\n              SECCION DE AGREGAR ITEM (INTERMEDIA) (DESKTOP)\n          ==============================-->\n          <!-- TOTALS TOOLBAR (DESKTOP) -->\n          <md-toolbar\n            v-if=\"!inMobile\"\n            class=\"md-dense md-white\"\n            style=\"border-color: #01C73E !important;border-style: solid;border-radius: 10px;\"\n          >\n            <div class=\"md-layout\" style=\"color: black\">\n              <div class=\"md-layout-item md-size-33\">\n                <center>\n                  <small>SUBTOTAL</small>\n                  <h4\n                    style=\"margin-top: 5px;\"\n                  >{{TOTAL.net | currency(getCurrencyConfig.symbol, getCurrencyConfig.decimalNumber, getCurrencyConfig.opt)}}</h4>\n                </center>\n              </div>\n              <div class=\"md-layout-item md-size-33\">\n                <center>\n                  <small>IMPUESTO</small>\n                  <h4\n                    style=\"margin-top: 5px;\"\n                  >{{(TOTAL.tax) | currency(getCurrencyConfig.symbol, getCurrencyConfig.decimalNumber, getCurrencyConfig.opt)}}</h4>\n                </center>\n              </div>\n              <div class=\"md-layout-item md-size-33\">\n                <center>\n                  <small>TOTAL</small>\n                  <h4\n                    style=\"margin-top: 5px;\"\n                  >{{(TOTAL.total) | currency(getCurrencyConfig.symbol, getCurrencyConfig.decimalNumber, getCurrencyConfig.opt)}}</h4>\n                </center>\n              </div>\n            </div>\n          </md-toolbar>\n          <!-- TOTALS TOOLBAR (DESKTOP) -->\n          <div class=\"md-layout md-small-hide\">\n            <div class=\"md-layout-item md-size-50 md-small-size-100\">\n              <md-card class=\"md-elevation-5 pull-right\" style=\"width: 100%; z-index:100; \">\n                <md-card-header class=\"md-card-header-icon md-card-header-green\">\n                  <div class=\"md-layout\">\n                    <div class=\"md-layout-item md-size-50\">\n                      <h6>ITEMS DE LA VENTA</h6>\n                    </div>\n                    <div class=\"md-layout-item md-size-50\" v-if=\"this.getIncome._id\">\n                      <h6\n                        v-if=\"getSelectedItems.length > 0\"\n                        class=\"pull-right text-success\"\n                        style=\"cursor:pointer\"\n                        @click=\"showHandleItems = !showHandleItems\"\n                      >\n                        <b>{{getSelectedItems.length}} Seleccionados</b>\n                      </h6>\n                    </div>\n                  </div>\n                </md-card-header>\n                <md-card-content>\n                  <item-list :items=\"null\"></item-list>\n                </md-card-content>\n              </md-card>\n\n              <center>\n                <div></div>\n              </center>\n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-small-size-100\">\n              <md-card class=\"md-elevation-5 pull-right\" style=\"width: 100%; z-index:100\">\n                <md-card-header class=\"md-card-header-icon md-card-header-green\"></md-card-header>\n                <md-card-content>\n                  <item-form :item=\"getItem\"></item-form>\n                  <br>\n                  <div class=\"md-layout\" v-if=\"!inMobile\">\n                    <button\n                      @click=\"handleLine();\"\n                      class=\"btn waves-effect green accent-4\"\n                      type=\"submit\"\n                      name=\"action\"\n                      style=\"border-radius: 15px;\"\n                    >\n                      AGREGAR ITEM\n                      <i class=\"material-icons right\">add</i>\n                    </button>\n                  </div>\n                </md-card-content>\n              </md-card>\n            </div>\n          </div>\n\n          <!-- ==============================\n              SECCION DE AGREGAR ITEM (INTERMEDIA) (DESKTOP)\n          ==============================-->\n        </md-card-content>\n      </md-card>\n    </div>\n  </div>\n</template>\n<script>\n// VUEX\nimport { mapGetters, mapActions, mapState, mapMutations } from 'vuex';\nimport store from '../../store/store.js';\nimport api from '../../lib/api';\n\nimport commentsModule from './components/income_comments';\nimport newContact from '../Dashboard/Components/new_contact';\nimport { Modal, Tabs } from '@/components';\nimport itemForm from './components/income_form';\nimport itemList from './components/income_list';\nimport isMobile from '../../assets/js/isMobile.js';\nimport autocomplete from '../Dashboard/Components/autocomplete/autocomplete';\nimport totales from '../../pages/Dashboard/Components/mobile_total';\nimport dialogButton from '../Dashboard/Components/dialogButton';\nimport spinner from '../Dashboard/Components/spinner';\nimport { ZoomCenterTransition, SlideYUpTransition } from 'vue2-transitions';\n\nexport default {\n  data() {\n    return {\n      inMobile: null,\n      loading: false,\n      isSale: true,\n      showDialogContac: false,\n      dialogContactDetail: false,\n      cleanSelected: false,\n      initialPosition: 0,\n      acomplete: {\n        itemType: 'users',\n        initialValue: null,\n        principalAtribute: 'name',\n        secondaryAtribute: 'email',\n        optionalMultipleAtribute: { 1: 'business', 2: 'legalName' },\n        secondaryQuery: null,\n        placeholder_value: '',\n        searchRoute: '',\n        res_name: 'client',\n        second_level_res: 'data',\n        optionalInputFunction_res: { 0: 'contactName' }\n      },\n      initialObject: null,\n      createContactClicked: false,\n      showHandleItems: false,\n      selection: {\n        edit: {\n          price: null,\n          quantity: null\n        },\n        delete: null\n      }\n    };\n  },\n  components: {\n    Modal,\n    itemForm,\n    itemList,\n    autocomplete,\n    totales,\n    dialogButton,\n    spinner,\n    Tabs,\n    commentsModule,\n    newContact,\n    ZoomCenterTransition,\n    SlideYUpTransition\n  },\n  methods: {\n    ...mapActions({\n      getCurrentIncome: 'incomes/getIncome',\n      postLine: 'incomes/postLine',\n      postItem: 'items/postItem',\n      putLine: 'incomes/putLine',\n      postIncome: 'incomes/postIncome',\n      putIncome: 'incomes/putIncome',\n      getAllComments: 'comments/getAllComments',\n      postComment: 'comments/postComment',\n      postContact: 'contacts/postContact',\n      shareIncome: 'incomes/shareIncome',\n      findContact: 'contacts/findContact'\n    }),\n\n    ...mapMutations({\n      setIncome: 'incomes/SET_INCOME',\n      cleanIncome: 'incomes/CLEAN',\n      cleanItem: 'items/CLEAN',\n      setItem: 'items/SET_ITEM',\n      hideShowBottom: 'HIDE_SHOW_BOTTOM',\n      editorState: 'HANDLE_EDIT',\n      changeDialogMessage: 'HANDLE_MSG_DIALOG',\n      setContact: 'contacts/SET_CONTACT',\n      cleanContact: 'contacts/CLEAN',\n      handleOptionalEmail: 'HANDLE_OPTIONAL_EMAIL',\n      setOptionalContact: 'incomes/SET_OPTIONAL_CONTACT',\n      setComment: 'comments/SET_COMMENT',\n      showDetails: 'HANDLE_DETAILS',\n      editSelection: 'items/EDIT_SELECTION',\n      cleanSelection: 'items/CLEAN_SELECTION',\n      setGlobalsCreate: 'items/SET_GLOBALS_CREATE',\n      handleItemDialog: 'HANDLE_ITEM_DIALOG',\n      showBottomTotals: 'HIDE_SHOW_TOTALS',\n      handleSelections: 'items/HANDLE_SELECTIONS'\n    }),\n\n    // HANDLE BOTTOM BAR AND INPUT (store)\n    displayDialog(dialog, bottomBar, inputs, clean) {\n      if (this.inMobile) {\n        this.cleanItem();\n\n        this.handleItemDialog(dialog);\n        this.hideShowBottom(bottomBar);\n      }\n    },\n    handleDetails() {\n      this.$route.params.id ? this.showDetails(false) : this.showDetails(true);\n    },\n    displayDialogContact(dialog, bottomBar, inputs, clean) {\n      if (bottomBar == undefined) {\n        dialog = true;\n        bottomBar = false;\n      }\n\n      this.showDialogContac = dialog;\n      this.hideShowBottom(bottomBar);\n    },\n    createContact(name) {\n      // this.createContactClicked = true;\n      this.setContact({ attr: 'name', value: name });\n\n      this.displayDialogContact(true, false);\n    },\n\n    displayDialogMsg(dialog, bottomBar, inputs, clean) {\n      // if (this.inMobile) {\n      this.changeDialogMessage(dialog);\n      this.hideShowBottom(bottomBar);\n      this.showDetails(inputs);\n      // }\n    },\n    showContactDetail() {\n      this.dialogContactDetail = !this.dialogContactDetail;\n    },\n\n    //  HANDLE LINE\n    handleLine() {\n      this.saveIncome().then(res => {\n        console.log('entro AQUIIIIIIIIIIII!!!! handleLine');\n\n        this.setItem({ attr: 'movement', value: res._id });\n        console.log('termino el saveIncome -> ', res);\n\n        if (this.isMobile) {\n          this.addLine().then(res => {\n            console.log('termino el add line dentro de handle line -> ', res);\n            this.cleanItem();\n          });\n        } else {\n          this.addLine();\n          this.cleanItem();\n        }\n      });\n    },\n\n    addLine() {\n      if (this.getSelectedItemsAdd.length > 0) {\n        this.handleDetails();\n\n        this.getSelectedItemsAdd.forEach(e => {\n          let item = {\n            item: this.getUserLastItems[e]._id,\n            name: this.getUserLastItems[e].name,\n            movement: this.getIncome._id,\n            price:\n              this.getUserLastItems[e].lastPrice != undefined\n                ? this.getUserLastItems[e].lastPrice\n                : 0,\n            quantity: 1,\n            movementType: this.CR_HANDLER.type,\n            currency: this.getIncome.currency\n          };\n          this.postLine(item).then(res => {\n            if (this.inMobile) {\n              this.displayDialog(false, false, false, true);\n            }\n          });\n        });\n        this.cleanSelection('selectedItemsAdd');\n        this.setGlobalsCreate(null);\n      } else {\n        return new Promise((resolve, reject) => {\n          if (this.getItem.name) {\n            if (!this.getItem._id || this.getItem.justCreated) {\n              if (!this.getItem.item || this.getItem.item == '') {\n                let obj = {\n                  name: this.getItem.name\n                };\n                this.postItem(obj).then(res => {\n                  this.setItem({\n                    attr: 'movementType',\n                    value: this.CR_HANDLER.type\n                  });\n                  this.postLine(this.getItem).then(res => {\n                    if (this.inMobile) {\n                      this.displayDialog(false, false, false, true);\n                      resolve(res);\n                    } else {\n                      // this.cleanItem();\n                      resolve(res);\n                    }\n                  });\n                });\n              } else {\n                this.handleDetails();\n                this.cleanSelection('selectedItemsAdd');\n                this.postLine(this.getItem).then(res => {\n                  if (this.inMobile) {\n                    this.displayDialog(false, false, false, true);\n                    resolve(res);\n                  } else {\n                    // this.cleanItem();\n                    resolve(res);\n                  }\n                });\n              }\n            } else {\n              console.log('Actualizo la linea');\n              this.handleDetails();\n              this.putLine(this.getItem).then(res => {\n                // this.cleanItem();\n                if (this.inMobile) {\n                  this.displayDialog(false, false, false, true);\n                  resolve(res);\n                } else {\n                  // this.cleanItem();\n                  resolve(res);\n                }\n              });\n            }\n          } else {\n            this.$toasted.show('Seleccione un item', { type: 'danger' });\n          }\n        });\n      }\n    },\n\n    // UPDATE MOVEMENT (state)\n    updateIncome(event) {\n      if (event.name == 'client') {\n        this.setClientType(event);\n        this.setMovementResponsable(this.CR_HANDLER);\n\n        event.value.user && event.value.user != null\n          ? (event.value = event.value.user)\n          : event.value.business && event.value.business != null\n          ? (event.value = event.value.business)\n          : event.value;\n      }\n\n      let obj = {\n        attr: event.name,\n        value: event.value,\n        second_level: event.second_level_res ? event.second_level_res : null\n      };\n\n      this.setIncome(obj);\n    },\n\n    setClientType(client) {\n      let setted_type = {\n        attr: 'client',\n        value:\n          client.value.user && client.value.user != null ? 'User' : 'Contact',\n        second_level: 'type'\n      };\n\n      this.setIncome(setted_type);\n    },\n\n    setMovementResponsable(cr_handler) {\n      let responsable_data = [\n        {\n          attr: 'responsable',\n          second_level: 'type',\n          value: 'User'\n        },\n        {\n          attr: 'responsable',\n          second_level: 'data',\n          value: this.getUser\n        }\n      ];\n      responsable_data.forEach(e => {\n        this.setIncome(e);\n      });\n    },\n\n    handleSaveIncome() {\n      this.blurAction(this.getIncome.contactName).then(res => {\n        this.saveIncome();\n      });\n    },\n\n    // HANDLE MOVEMENT\n    saveIncome() {\n      return new Promise((resolve, reject) => {\n        if (this.errors.items.length > 0 || this.getIncome.name == null) {\n          this.$toasted.show('Uno o mas campos erroneos en la venta!', {\n            type: 'danger'\n          });\n        } else {\n          if (this.getIncome._id) {\n            this.putIncome(this.getIncome).then(res => {\n              this.cleanContact();\n              resolve(res);\n\n              console.log('ACTUALIZADO!');\n            });\n          } else {\n            if (this.getIncome.responsable.data == null)\n              this.setMovementResponsable(this.CR_HANDLER);\n\n            this.postIncome(this.INCOME).then(res => {\n              this.cleanContact();\n              let movementType =\n                this.$route.name == 'Income' ? 'income' : 'outcome';\n              this.$router.replace('/' + movementType + '/' + res._id);\n              resolve(res);\n              console.log('GUARDADO!');\n            });\n          }\n        }\n      });\n    },\n    newComment() {\n      let params = {\n        parent: this.getIncome._id,\n        type: 'movement',\n        txt: this.getComment\n      };\n      this.postComment(params).then(res => {\n        this.setComment('');\n      });\n    },\n\n    newContact() {\n      if (this.validateEmail(this.getContact.email)) {\n        this.findContact(this.getContact.email).then(res => {\n          this.postContact(this.CONTACT).then(res => {\n            this.displayDialogContact(false, false, false, true);\n            this.setMovementResponsable(this.CR_HANDLER);\n            let foo = [\n              {\n                attr: 'client',\n                value: res.user != null ? (res = res.user) : res,\n                second_level: 'data'\n              },\n              {\n                attr: 'client',\n                value: res.imgUrl ? 'User' : 'Contact',\n                second_level: 'type'\n              }\n            ];\n\n            foo.forEach(e => {\n              this.setIncome(e);\n            });\n          });\n        });\n      } else {\n        this.$toasted.show('Email invalido!', { type: 'danger' });\n      }\n    },\n\n    handleOptionalEmailModal(payload) {\n      this.handleOptionalEmail(payload);\n    },\n    setOpcionalUser(event) {\n      this.OPTIONAL_USER.email = event.value;\n    },\n    handleInputDisplay(show, isClick) {\n      if (this.getIncome._id) {\n        if (this.getIncome.editor == this.getUser._id) {\n          this.editorState(true);\n        } else {\n          this.editorState(false);\n        }\n      } else {\n        this.editorState(true);\n        this.handleSeeDetails();\n      }\n    },\n\n    handleSeeDetails() {\n      if (this.getEnableEdit) {\n        this.showDetails(true);\n      }\n    },\n\n    saveOptionalUser() {\n      this.setOptionalContact(this.OPTIONAL_USER);\n      if (this.OPTIONAL_USER.email) {\n        console.log('PAYLOAD ANTES DEL  SHARE_INCOME -> ', this.getIncome);\n        this.shareIncome(this.getIncome).then(() => {\n          this.handleOptionalEmailModal(false);\n          this.$toasted.show('Cotizacion enviada!');\n        });\n      } else {\n        this.$toasted.show('Ingresa un correo!', { type: 'info' });\n      }\n    },\n    getUserImg() {\n      if (this.CR_HANDLER.type == 'income') {\n        if (this.INCOME.client.data) {\n          if (this.INCOME.client.data.imgUrl) {\n            return this.INCOME.client.data.imgUrl;\n          } else {\n            return require('../../../public/img/default-avatar.png');\n          }\n        } else {\n          return require('../../../public/img/default-avatar.png');\n        }\n      } else {\n        if (this.getIncome._id) {\n          if (this.INCOME.client.data) {\n            if (this.INCOME.client.data.imgUrl) {\n              return this.INCOME.client.data.imgUrl;\n            } else {\n              return require('../../../public/img/default-avatar.png');\n            }\n          } else {\n            return require('../../../public/img/default-avatar.png');\n          }\n        } else {\n          if (this.INCOME.responsable.type == 'User') {\n            console.log('Entro en el segundo con user');\n\n            if (this.INCOME.responsable.data.imgUrl) {\n              return this.INCOME.responsable.data.imgUrl;\n            } else {\n              return require('../../assets/img/company_icon.png');\n            }\n          } else {\n            console.log('Entro en el segundo sin user');\n\n            return require('../../../public/img/default-avatar.png');\n          }\n        }\n      }\n    },\n    getUserName() {\n      switch (this.CR_HANDLER.type) {\n        case 'income':\n          if (\n            !this.INCOME[this.CR_HANDLER.receptor].type ||\n            this.INCOME[this.CR_HANDLER.receptor].type == null\n          ) {\n            return this.INCOME[this.CR_HANDLER.receptor].name;\n          } else {\n            return this.INCOME[this.CR_HANDLER.receptor].data.name;\n          }\n\n          break;\n\n        case 'outcome':\n          if (\n            !this.INCOME[this.CR_HANDLER.emisor].type ||\n            this.INCOME[this.CR_HANDLER.emisor].type == null\n          ) {\n            return this.INCOME[this.CR_HANDLER.emisor].name;\n          } else {\n            if (this.getIncome._id) {\n              return this.INCOME[this.CR_HANDLER.emisor].data.name;\n            } else {\n              return this.INCOME[this.CR_HANDLER.receptor].data.name;\n            }\n          }\n          break;\n      }\n    },\n    setInitial(payload) {\n      this.initialObject = payload;\n    },\n    compareOnExit(payload) {\n      if (JSON.stringify(this.initialObject) === JSON.stringify(this.INCOME)) {\n        console.log('');\n      } else {\n        if (this.getIncome._id) {\n          this.saveIncome();\n        }\n      }\n    },\n\n    validateEmail(email) {\n      var re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    },\n    blurAction(query, click) {\n      console.log('sfds');\n      return new Promise((resolve, reject) => {\n        console.log('blurEvent', query);\n\n        this.findContact(this.getIncome.contactName).then(res => {\n          if (res) {\n            console.log(res);\n            resolve(true);\n          } else {\n            if (this.validateEmail(query)) {\n              let contactName = query.split('@');\n\n              this.setContact({ attr: 'name', value: contactName[0] });\n              this.setContact({ attr: 'email', value: query });\n\n              this.postContact(this.CONTACT).then(res => {\n                this.displayDialogContact(false, false, false, true);\n                this.setMovementResponsable(this.CR_HANDLER);\n                let foo = [\n                  {\n                    attr: 'client',\n                    value: res.user != null ? (res = res.user) : res,\n                    second_level: 'data'\n                  },\n                  {\n                    attr: 'client',\n                    value: res.imgUrl ? 'User' : 'Contact',\n                    second_level: 'type'\n                  }\n                ];\n                foo.forEach(e => {\n                  this.setIncome(e);\n                });\n                resolve(true);\n              });\n            } else {\n              resolve(true);\n            }\n          }\n        });\n      });\n    },\n    handleScroll(event) {\n      if (event.target.scrollTop > this.initialPosition) {\n        this.showBottomTotals(false);\n      } else if (event.target.scrollTop < this.initialPosition) {\n        this.showBottomTotals(true);\n      }\n\n      this.initialPosition = event.target.scrollTop;\n    }\n  },\n\n  created() {\n    this.inMobile = isMobile;\n    // AUTOCOMPLETE CONFIG\n    this.acomplete.searchRoute = api + '/contacts/find/self/';\n\n    // GENERAL CONFIG (ID OR NOT ID)\n    if (this.$route.params.id) {\n      this.loading = true;\n\n      this.getCurrentIncome(this.$route.params.id).then(res => {\n        this.showDetails(false);\n        this.handleInputDisplay();\n        this.loading = false;\n        this.setInitial(this.INCOME);\n      });\n    } else {\n      this.cleanIncome();\n      this.cleanItem();\n      this.showDetails(true);\n    }\n\n    if (this.$route.name == 'Outcome') {\n      this.hideShowBottom(false);\n    }\n\n    !this.isSale\n      ? (this.acomplete.placeholder_value = 'Proveedor')\n      : (this.acomplete.placeholder_value = 'Cliente');\n  },\n  mounted() {\n    this.acomplete.initialValue = this.INCOME_CLIENT;\n  },\n\n  computed: {\n    ...mapState({\n      showTotals: state => state.showTotals,\n      showDialogMessage: state => state.showDialogMessage,\n      optionalEmail: state => state.optionalEmail\n    }),\n\n    ...mapGetters({\n      getIncome: 'incomes/getIncome',\n      getItem: 'items/getItem',\n      getContact: 'contacts/getContact',\n      getComment: 'comments/getComment',\n      getUser: 'users/user',\n      getEnableEdit: 'getEnableEdit',\n      getSeeDetails: 'getSeeDetails',\n      getSelectedItems: 'items/getSelectedItems',\n      getSelectedItemsAdd: 'items/getSelectedItemsAdd',\n      getUserLastItems: 'items/getUserLastItems',\n      getGlobalItemVars: 'items/getGlobalItemVars',\n      getShowDialogIncome: 'getShowDialogIncome',\n      getShowTotals: 'getShowTotals',\n      getCurrencyConfig: 'getCurrencyConfig'\n    }),\n\n    CR_HANDLER() {\n      switch (this.$route.name) {\n        case 'Income':\n          return {\n            emisor: 'responsable',\n            receptor: 'client',\n            type: 'income'\n          };\n          break;\n\n        case 'Outcome':\n          return {\n            emisor: 'client',\n            receptor: 'responsable',\n            type: 'outcome'\n          };\n          break;\n\n        default:\n      }\n    },\n\n    INCOME_CLIENT() {\n      if (\n        this.getIncome[this.CR_HANDLER.receptor].type &&\n        this.getIncome[this.CR_HANDLER.receptor].type != null\n      ) {\n        return this.getIncome[this.CR_HANDLER.receptor].data;\n      } else {\n        if (this.getIncome._id) {\n          return this.getIncome[this.CR_HANDLER.receptor].name;\n        } else {\n          return this.getIncome.contactName;\n        }\n      }\n    },\n    INCOME_RESPONSABLE() {\n      if (\n        this.getIncome[this.CR_HANDLER.emisor].type &&\n        this.getIncome[this.CR_HANDLER.emisor].type != null\n      ) {\n        return this.getIncome[this.CR_HANDLER.emisor].data;\n      } else {\n        if (this.$route.params.id) {\n          return this.getIncome[this.CR_HANDLER.emisor].name;\n        } else {\n          return this.getIncome.contactName;\n        }\n      }\n    },\n\n    INCOME() {\n      return {\n        _id: this.getIncome._id,\n        name: this.getIncome.name,\n        description: this.getIncome.description,\n        dates: {\n          expiration: null\n        },\n        creator: this.getIncome.creator,\n        contactName: this.getIncome.client.name\n          ? this.getIncome.client.name\n          : null,\n\n        client:\n          this.getIncome[this.CR_HANDLER.receptor].type &&\n          this.getIncome[this.CR_HANDLER.receptor].type != null\n            ? {\n                type: this.getIncome[this.CR_HANDLER.receptor].type,\n                data: this.INCOME_CLIENT\n              }\n            : { name: this.INCOME_CLIENT },\n\n        responsable:\n          this.getIncome[this.CR_HANDLER.emisor].type &&\n          this.getIncome[this.CR_HANDLER.emisor].type != null\n            ? {\n                type: this.getIncome[this.CR_HANDLER.emisor].type,\n                data: this.INCOME_RESPONSABLE\n              }\n            : { name: this.INCOME_RESPONSABLE },\n\n        // ONLY FOR POST REQUEST, IN GET REQUEST IM USING GETTER (this.getIncome)\n        editor:\n          this.CR_HANDLER.type == 'income'\n            ? this.INCOME_RESPONSABLE\n            : this.INCOME_CLIENT,\n\n        lines: [],\n        total: {\n          net: 0,\n          tax: 0\n        },\n        state: 'draft',\n        isActive: true,\n        currency: null\n      };\n    },\n\n    OPTIONAL_USER() {\n      return {\n        name:\n          this.CR_HANDLER.type == 'income'\n            ? this.getIncome.client.name\n            : this.getIncome.responsable.name,\n        email: null\n      };\n    },\n    CONTACT() {\n      return {\n        creator: this.getContact.creator,\n        email: this.getContact.email,\n        isActive: true,\n        name: this.getContact.name,\n        phone: this.getContact.phone,\n        user: this.getContact.user\n      };\n    },\n    TOTAL() {\n      let total = _.sumBy(this.getIncome.lines, function(line) {\n        return line.price * line.quantity;\n      });\n\n      return {\n        net: total,\n        tax: total * 0.19,\n        total: total * 0.19 + total\n      };\n    }\n  },\n\n  watch: {\n    INCOME_CLIENT: function(val) {\n      console.log('this.INCOME_CLIENT -> ', this.INCOME_CLIENT);\n      console.log('this.INCOME_RESPONSABLE -> ', this.INCOME_RESPONSABLE);\n      if (val) {\n        if (!val.name) {\n          this.acomplete.initialValue = val;\n        } else {\n          this.acomplete.initialValue = val.name;\n        }\n      }\n    }\n  },\n\n  // NAVIGATIONS GUARDS\n  beforeRouteEnter: (to, from, next) => {\n    store.commit('HIDE_SHOW_BOTTOM', false);\n    store.commit('HIDE_SHOW_TOTALS', true);\n    store.commit('HIDE_SHOW_NAVBAR', false);\n\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    store.commit('HIDE_SHOW_BOTTOM', true);\n    store.commit('HIDE_SHOW_TOTALS', false);\n    store.commit('HIDE_SHOW_NAVBAR', true);\n    this.compareOnExit();\n\n    next();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// .contentDialog {\n//   max-width: 100%;\n//   max-height: 100% !important;\n//   overflow: auto;\n// }\n\n.md-content {\n  max-width: 500px;\n  max-height: 460px;\n  overflow: auto;\n}\n\n.md-menu-content-bottom-start {\n  z-index: 110;\n}\n\n.md-big-hide {\n  display: none;\n}\n@media (max-width: 618px) {\n  .md-big-hide {\n    display: block;\n  }\n}\n.userIncomeClass {\n  height: 200%;\n}\n\n#textField /deep/ input {\n  background-color: transparent;\n  border: none;\n  border-bottom: none;\n  border-radius: 0;\n  outline: none;\n  height: 100%;\n  width: 100%;\n  font-size: 16px;\n  margin: 0;\n  padding: 0;\n  margin-top: 10px;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n  -webkit-transition: none;\n  transition: none;\n  transition: none;\n  transition: none;\n  max-height: none !important;\n}\n.avatarDesktop {\n  margin-top: 90% !important;\n}\n.avatarMobile {\n  margin-top: 100% !important;\n}\n.containerMobile {\n  margin-top: -10%;\n}\n.containerDesktop {\n  margin-top: -2.6px;\n}\n</style>\n"],"sourceRoot":"src/pages/incomes"}]}